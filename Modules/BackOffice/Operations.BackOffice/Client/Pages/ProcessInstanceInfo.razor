@inject IProcessDefinitionService processDefinitionService;
@inject IProcessInstanceService processInstanceService;
@inject IProcessIncidentService processIncidentsService;
@inject IProcessFlowNodeInstanceService processFlowNodeInstanceService;


@page "/process-instances/{instanceId:long}"
@using Operations.BackOffice.Client.Components.AuditLogs
@using Operations.BackOffice.Client.Components.BPMNViewer
@using Operations.BackOffice.Client.Components.ProcessIncident
@using Operations.BackOffice.Client.Data.Incidents;
@using Operations.BackOffice.Client.Data.ProcessDefinitions;
@using Operations.BackOffice.Client.Data.ProcessFlowNodeInstances;
@using Operations.BackOffice.Client.Data.ProcessInstances;
@using Operations.BackOffice.Client.Data.Incidents.Dto;
@using Operations.BackOffice.Client.Data.ProcessInstances.Dto;

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-16">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h3" GutterBottom="true">Process Instance <code>@InstanceId</code> Details</MudText>
        </MudItem>
        @if (_instance != null)
        {
            <MudItem xs="12" lg="3" xxl="2">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>Process Instance Attributes</CardHeaderContent>
                        <CardHeaderActions>
                            <MudToolBar DisableGutters="true" Dense="true">
                            </MudToolBar>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12">
                                <MudField T="string" Label="Process Instance Id" Variant="Variant.Text" InnerPadding="false" AdornmentIcon="@Icons.Material.Outlined.ContentCopy" Adornment="Adornment.End">@InstanceId</MudField>
                            </MudItem>
                            <MudItem xs="12">
                                <MudField Label="Process State" Variant="Variant.Text" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Outlined.ContentCopy">@_instance.State</MudField>
                            </MudItem>
                            <MudItem xs="12">
                                <MudField Label="BPMN Process Id" Variant="Variant.Text" InnerPadding="false">@_instance.BpmnProcessId</MudField>
                            </MudItem>
                            <MudItem xs="12">
                                <MudField Label="Started At" Variant="Variant.Text" InnerPadding="false">@_instance.StartDate</MudField>
                            </MudItem>
                            <MudItem xs="12">
                                <MudField Label="Ended At" Variant="Variant.Text" InnerPadding="false">@_instance.EndDate</MudField>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>


            <MudItem xs="12" lg="9" xxl="10">
                <MudCard>
                    <MudCardHeader Class="py-2 pr-2">
                        <CardHeaderContent>
                            <MudToolBar DisableGutters="true" Dense="true">
                                BPMN Diagram
                                <MudSpacer />
                            </MudToolBar>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Class="relative pa-0" Style="height: 500px; overflow:hidden;">
                        @if (_bpmnXml != null)
                        {
                            <BPMNViewer Xml="@_bpmnXml" SequenceFlows="@_sequenceFlows" IncidentElementIds="@_incidentElementIds"></BPMNViewer>
                        }
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>Process Instance Details</CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTabs>
                            <MudTabPanel Text="Audit log">
                                <MudGrid>
                                    <MudItem xs="12">
                                        <MudCard>
                                            <MudCardHeader>
                                                <CardHeaderContent>Runtime</CardHeaderContent>
                                            </MudCardHeader>
                                            <MudCardContent>
                                                <AuditLogsTable ProcessFlowNodeInstanceService="@processFlowNodeInstanceService" ProcessInstanceId="@InstanceId"/>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudItem>
                                </MudGrid>
                            </MudTabPanel>

                            <MudTabPanel Text="Incidents">
                                <MudGrid>
                                    <MudItem xs="12">
                                        <MudCard>
                                            <MudCardHeader>
                                                <CardHeaderContent>Runtime</CardHeaderContent>
                                            </MudCardHeader>
                                            <MudCardContent>
                                                <ProcessIncidentsTable ProcessIncidentService="@processIncidentsService" ProcessInstanceId="@InstanceId" IncidenState="@ProcessIncidenState.ACTIVE" />
                                            </MudCardContent>
                                        </MudCard>
                                    </MudItem>
                                    <MudItem xs="12">
                                        <MudCard>
                                            <MudCardHeader>
                                                <CardHeaderContent>Historic</CardHeaderContent>
                                            </MudCardHeader>
                                            <MudCardContent>
                                                <ProcessIncidentsTable ProcessIncidentService="@processIncidentsService" ProcessInstanceId="@InstanceId" IncidenState="@ProcessIncidenState.RESOLVED" />
                                            </MudCardContent>
                                        </MudCard>
                                    </MudItem>
                                </MudGrid>
                            </MudTabPanel>
                        </MudTabs>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }


    </MudGrid>
</MudContainer>


@code {

    [Parameter]
    public long InstanceId { get; set; }

    private ProcessInstanceDto _instance;
    private string? _bpmnXml;
    private string[] _sequenceFlows = Array.Empty<string>();
    private string[] _incidentElementIds = Array.Empty<string>();


    protected override async Task OnInitializedAsync()
    {
        var processInstance = (await processInstanceService.SearchProcessInstance(new SearchProcessInstanceQuery(
            new ProcessInstanceDto
                {
                    Key = InstanceId,
                },
                1))).Items.First();

        var sequenceFlows = await processInstanceService.GetProcessInstanceSequenceFlows(InstanceId);

        var incidents = (await processIncidentsService.SearchProcessIncident(new SearchProcessIncidentsQuery(
            Filter: new ProcessIncidentDto
                {
                    ProcessInstanceKey = InstanceId,
                    State = ProcessIncidenState.ACTIVE,
                }))).Items;

        _incidentElementIds = incidents.Select(x => x.ProcessElementId).ToArray();
        _instance = processInstance;
        _sequenceFlows = sequenceFlows;
        _bpmnXml = await processDefinitionService.GetProcessDefinitionXml(processInstance.ProcessDefinitionKey!.Value);
    }
}