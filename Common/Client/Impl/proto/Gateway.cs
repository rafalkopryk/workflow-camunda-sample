// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/gateway.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GatewayProtocol {

  /// <summary>Holder for reflection information generated from Protos/gateway.proto</summary>
  public static partial class GatewayReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/gateway.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GatewayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3MvZ2F0ZXdheS5wcm90bxIQZ2F0ZXdheV9wcm90b2NvbCKOAQoT",
            "QWN0aXZhdGVKb2JzUmVxdWVzdBIMCgR0eXBlGAEgASgJEg4KBndvcmtlchgC",
            "IAEoCRIPCgd0aW1lb3V0GAMgASgDEhkKEW1heEpvYnNUb0FjdGl2YXRlGAQg",
            "ASgFEhUKDWZldGNoVmFyaWFibGUYBSADKAkSFgoOcmVxdWVzdFRpbWVvdXQY",
            "BiABKAMiRAoUQWN0aXZhdGVKb2JzUmVzcG9uc2USLAoEam9icxgBIAMoCzIe",
            "LmdhdGV3YXlfcHJvdG9jb2wuQWN0aXZhdGVkSm9iIqgCCgxBY3RpdmF0ZWRK",
            "b2ISCwoDa2V5GAEgASgDEgwKBHR5cGUYAiABKAkSGgoScHJvY2Vzc0luc3Rh",
            "bmNlS2V5GAMgASgDEhUKDWJwbW5Qcm9jZXNzSWQYBCABKAkSIAoYcHJvY2Vz",
            "c0RlZmluaXRpb25WZXJzaW9uGAUgASgFEhwKFHByb2Nlc3NEZWZpbml0aW9u",
            "S2V5GAYgASgDEhEKCWVsZW1lbnRJZBgHIAEoCRIaChJlbGVtZW50SW5zdGFu",
            "Y2VLZXkYCCABKAMSFQoNY3VzdG9tSGVhZGVycxgJIAEoCRIOCgZ3b3JrZXIY",
            "CiABKAkSDwoHcmV0cmllcxgLIAEoBRIQCghkZWFkbGluZRgMIAEoAxIRCgl2",
            "YXJpYWJsZXMYDSABKAkiOgocQ2FuY2VsUHJvY2Vzc0luc3RhbmNlUmVxdWVz",
            "dBIaChJwcm9jZXNzSW5zdGFuY2VLZXkYASABKAMiHwodQ2FuY2VsUHJvY2Vz",
            "c0luc3RhbmNlUmVzcG9uc2UiNwoSQ29tcGxldGVKb2JSZXF1ZXN0Eg4KBmpv",
            "YktleRgBIAEoAxIRCgl2YXJpYWJsZXMYAiABKAkiFQoTQ29tcGxldGVKb2JS",
            "ZXNwb25zZSLNAQocQ3JlYXRlUHJvY2Vzc0luc3RhbmNlUmVxdWVzdBIcChRw",
            "cm9jZXNzRGVmaW5pdGlvbktleRgBIAEoAxIVCg1icG1uUHJvY2Vzc0lkGAIg",
            "ASgJEg8KB3ZlcnNpb24YAyABKAUSEQoJdmFyaWFibGVzGAQgASgJElQKEXN0",
            "YXJ0SW5zdHJ1Y3Rpb25zGAUgAygLMjkuZ2F0ZXdheV9wcm90b2NvbC5Qcm9j",
            "ZXNzSW5zdGFuY2VDcmVhdGlvblN0YXJ0SW5zdHJ1Y3Rpb24iPAonUHJvY2Vz",
            "c0luc3RhbmNlQ3JlYXRpb25TdGFydEluc3RydWN0aW9uEhEKCWVsZW1lbnRJ",
            "ZBgBIAEoCSKBAQodQ3JlYXRlUHJvY2Vzc0luc3RhbmNlUmVzcG9uc2USHAoU",
            "cHJvY2Vzc0RlZmluaXRpb25LZXkYASABKAMSFQoNYnBtblByb2Nlc3NJZBgC",
            "IAEoCRIPCgd2ZXJzaW9uGAMgASgFEhoKEnByb2Nlc3NJbnN0YW5jZUtleRgE",
            "IAEoAyKZAQomQ3JlYXRlUHJvY2Vzc0luc3RhbmNlV2l0aFJlc3VsdFJlcXVl",
            "c3QSPwoHcmVxdWVzdBgBIAEoCzIuLmdhdGV3YXlfcHJvdG9jb2wuQ3JlYXRl",
            "UHJvY2Vzc0luc3RhbmNlUmVxdWVzdBIWCg5yZXF1ZXN0VGltZW91dBgCIAEo",
            "AxIWCg5mZXRjaFZhcmlhYmxlcxgDIAMoCSKeAQonQ3JlYXRlUHJvY2Vzc0lu",
            "c3RhbmNlV2l0aFJlc3VsdFJlc3BvbnNlEhwKFHByb2Nlc3NEZWZpbml0aW9u",
            "S2V5GAEgASgDEhUKDWJwbW5Qcm9jZXNzSWQYAiABKAkSDwoHdmVyc2lvbhgD",
            "IAEoBRIaChJwcm9jZXNzSW5zdGFuY2VLZXkYBCABKAMSEQoJdmFyaWFibGVz",
            "GAUgASgJIlUKFERlcGxveVByb2Nlc3NSZXF1ZXN0EjkKCXByb2Nlc3NlcxgB",
            "IAMoCzImLmdhdGV3YXlfcHJvdG9jb2wuUHJvY2Vzc1JlcXVlc3RPYmplY3Q6",
            "AhgBIjwKFFByb2Nlc3NSZXF1ZXN0T2JqZWN0EgwKBG5hbWUYASABKAkSEgoK",
            "ZGVmaW5pdGlvbhgCIAEoDDoCGAEiXgoVRGVwbG95UHJvY2Vzc1Jlc3BvbnNl",
            "EgsKA2tleRgBIAEoAxI0Cglwcm9jZXNzZXMYAiADKAsyIS5nYXRld2F5X3By",
            "b3RvY29sLlByb2Nlc3NNZXRhZGF0YToCGAEiRgoVRGVwbG95UmVzb3VyY2VS",
            "ZXF1ZXN0Ei0KCXJlc291cmNlcxgBIAMoCzIaLmdhdGV3YXlfcHJvdG9jb2wu",
            "UmVzb3VyY2UiKQoIUmVzb3VyY2USDAoEbmFtZRgBIAEoCRIPCgdjb250ZW50",
            "GAIgASgMIlgKFkRlcGxveVJlc291cmNlUmVzcG9uc2USCwoDa2V5GAEgASgD",
            "EjEKC2RlcGxveW1lbnRzGAIgAygLMhwuZ2F0ZXdheV9wcm90b2NvbC5EZXBs",
            "b3ltZW50ItYBCgpEZXBsb3ltZW50EjQKB3Byb2Nlc3MYASABKAsyIS5nYXRl",
            "d2F5X3Byb3RvY29sLlByb2Nlc3NNZXRhZGF0YUgAEjYKCGRlY2lzaW9uGAIg",
            "ASgLMiIuZ2F0ZXdheV9wcm90b2NvbC5EZWNpc2lvbk1ldGFkYXRhSAASTgoU",
            "ZGVjaXNpb25SZXF1aXJlbWVudHMYAyABKAsyLi5nYXRld2F5X3Byb3RvY29s",
            "LkRlY2lzaW9uUmVxdWlyZW1lbnRzTWV0YWRhdGFIAEIKCghNZXRhZGF0YSJt",
            "Cg9Qcm9jZXNzTWV0YWRhdGESFQoNYnBtblByb2Nlc3NJZBgBIAEoCRIPCgd2",
            "ZXJzaW9uGAIgASgFEhwKFHByb2Nlc3NEZWZpbml0aW9uS2V5GAMgASgDEhQK",
            "DHJlc291cmNlTmFtZRgEIAEoCSKsAQoQRGVjaXNpb25NZXRhZGF0YRIVCg1k",
            "bW5EZWNpc2lvbklkGAEgASgJEhcKD2RtbkRlY2lzaW9uTmFtZRgCIAEoCRIP",
            "Cgd2ZXJzaW9uGAMgASgFEhMKC2RlY2lzaW9uS2V5GAQgASgDEiEKGWRtbkRl",
            "Y2lzaW9uUmVxdWlyZW1lbnRzSWQYBSABKAkSHwoXZGVjaXNpb25SZXF1aXJl",
            "bWVudHNLZXkYBiABKAMirgEKHERlY2lzaW9uUmVxdWlyZW1lbnRzTWV0YWRh",
            "dGESIQoZZG1uRGVjaXNpb25SZXF1aXJlbWVudHNJZBgBIAEoCRIjChtkbW5E",
            "ZWNpc2lvblJlcXVpcmVtZW50c05hbWUYAiABKAkSDwoHdmVyc2lvbhgDIAEo",
            "BRIfChdkZWNpc2lvblJlcXVpcmVtZW50c0tleRgEIAEoAxIUCgxyZXNvdXJj",
            "ZU5hbWUYBSABKAkicAoORmFpbEpvYlJlcXVlc3QSDgoGam9iS2V5GAEgASgD",
            "Eg8KB3JldHJpZXMYAiABKAUSFAoMZXJyb3JNZXNzYWdlGAMgASgJEhQKDHJl",
            "dHJ5QmFja09mZhgEIAEoAxIRCgl2YXJpYWJsZXMYBSABKAkiEQoPRmFpbEpv",
            "YlJlc3BvbnNlIkwKEVRocm93RXJyb3JSZXF1ZXN0Eg4KBmpvYktleRgBIAEo",
            "AxIRCgllcnJvckNvZGUYAiABKAkSFAoMZXJyb3JNZXNzYWdlGAMgASgJIhQK",
            "ElRocm93RXJyb3JSZXNwb25zZSJ3ChVQdWJsaXNoTWVzc2FnZVJlcXVlc3QS",
            "DAoEbmFtZRgBIAEoCRIWCg5jb3JyZWxhdGlvbktleRgCIAEoCRISCgp0aW1l",
            "VG9MaXZlGAMgASgDEhEKCW1lc3NhZ2VJZBgEIAEoCRIRCgl2YXJpYWJsZXMY",
            "BSABKAkiJQoWUHVibGlzaE1lc3NhZ2VSZXNwb25zZRILCgNrZXkYASABKAMi",
            "LQoWUmVzb2x2ZUluY2lkZW50UmVxdWVzdBITCgtpbmNpZGVudEtleRgBIAEo",
            "AyIZChdSZXNvbHZlSW5jaWRlbnRSZXNwb25zZSIRCg9Ub3BvbG9neVJlcXVl",
            "c3QiogEKEFRvcG9sb2d5UmVzcG9uc2USLQoHYnJva2VycxgBIAMoCzIcLmdh",
            "dGV3YXlfcHJvdG9jb2wuQnJva2VySW5mbxITCgtjbHVzdGVyU2l6ZRgCIAEo",
            "BRIXCg9wYXJ0aXRpb25zQ291bnQYAyABKAUSGQoRcmVwbGljYXRpb25GYWN0",
            "b3IYBCABKAUSFgoOZ2F0ZXdheVZlcnNpb24YBSABKAkiegoKQnJva2VySW5m",
            "bxIOCgZub2RlSWQYASABKAUSDAoEaG9zdBgCIAEoCRIMCgRwb3J0GAMgASgF",
            "Ei8KCnBhcnRpdGlvbnMYBCADKAsyGy5nYXRld2F5X3Byb3RvY29sLlBhcnRp",
            "dGlvbhIPCgd2ZXJzaW9uGAUgASgJIqACCglQYXJ0aXRpb24SEwoLcGFydGl0",
            "aW9uSWQYASABKAUSPQoEcm9sZRgCIAEoDjIvLmdhdGV3YXlfcHJvdG9jb2wu",
            "UGFydGl0aW9uLlBhcnRpdGlvbkJyb2tlclJvbGUSQQoGaGVhbHRoGAMgASgO",
            "MjEuZ2F0ZXdheV9wcm90b2NvbC5QYXJ0aXRpb24uUGFydGl0aW9uQnJva2Vy",
            "SGVhbHRoIj0KE1BhcnRpdGlvbkJyb2tlclJvbGUSCgoGTEVBREVSEAASDAoI",
            "Rk9MTE9XRVIQARIMCghJTkFDVElWRRACIj0KFVBhcnRpdGlvbkJyb2tlckhl",
            "YWx0aBILCgdIRUFMVEhZEAASDQoJVU5IRUFMVEhZEAESCAoEREVBRBACIjoK",
            "F1VwZGF0ZUpvYlJldHJpZXNSZXF1ZXN0Eg4KBmpvYktleRgBIAEoAxIPCgdy",
            "ZXRyaWVzGAIgASgFIhoKGFVwZGF0ZUpvYlJldHJpZXNSZXNwb25zZSJTChNT",
            "ZXRWYXJpYWJsZXNSZXF1ZXN0EhoKEmVsZW1lbnRJbnN0YW5jZUtleRgBIAEo",
            "AxIRCgl2YXJpYWJsZXMYAiABKAkSDQoFbG9jYWwYAyABKAgiIwoUU2V0VmFy",
            "aWFibGVzUmVzcG9uc2USCwoDa2V5GAEgASgDIqAEChxNb2RpZnlQcm9jZXNz",
            "SW5zdGFuY2VSZXF1ZXN0EhoKEnByb2Nlc3NJbnN0YW5jZUtleRgBIAEoAxJg",
            "ChRhY3RpdmF0ZUluc3RydWN0aW9ucxgCIAMoCzJCLmdhdGV3YXlfcHJvdG9j",
            "b2wuTW9kaWZ5UHJvY2Vzc0luc3RhbmNlUmVxdWVzdC5BY3RpdmF0ZUluc3Ry",
            "dWN0aW9uEmIKFXRlcm1pbmF0ZUluc3RydWN0aW9ucxgDIAMoCzJDLmdhdGV3",
            "YXlfcHJvdG9jb2wuTW9kaWZ5UHJvY2Vzc0luc3RhbmNlUmVxdWVzdC5UZXJt",
            "aW5hdGVJbnN0cnVjdGlvbhquAQoTQWN0aXZhdGVJbnN0cnVjdGlvbhIRCgll",
            "bGVtZW50SWQYASABKAkSIgoaYW5jZXN0b3JFbGVtZW50SW5zdGFuY2VLZXkY",
            "AiABKAMSYAoUdmFyaWFibGVJbnN0cnVjdGlvbnMYAyADKAsyQi5nYXRld2F5",
            "X3Byb3RvY29sLk1vZGlmeVByb2Nlc3NJbnN0YW5jZVJlcXVlc3QuVmFyaWFi",
            "bGVJbnN0cnVjdGlvbho5ChNWYXJpYWJsZUluc3RydWN0aW9uEhEKCXZhcmlh",
            "YmxlcxgBIAEoCRIPCgdzY29wZUlkGAIgASgJGjIKFFRlcm1pbmF0ZUluc3Ry",
            "dWN0aW9uEhoKEmVsZW1lbnRJbnN0YW5jZUtleRgBIAEoAyIfCh1Nb2RpZnlQ",
            "cm9jZXNzSW5zdGFuY2VSZXNwb25zZTLIDAoHR2F0ZXdheRJhCgxBY3RpdmF0",
            "ZUpvYnMSJS5nYXRld2F5X3Byb3RvY29sLkFjdGl2YXRlSm9ic1JlcXVlc3Qa",
            "Ji5nYXRld2F5X3Byb3RvY29sLkFjdGl2YXRlSm9ic1Jlc3BvbnNlIgAwARJ6",
            "ChVDYW5jZWxQcm9jZXNzSW5zdGFuY2USLi5nYXRld2F5X3Byb3RvY29sLkNh",
            "bmNlbFByb2Nlc3NJbnN0YW5jZVJlcXVlc3QaLy5nYXRld2F5X3Byb3RvY29s",
            "LkNhbmNlbFByb2Nlc3NJbnN0YW5jZVJlc3BvbnNlIgASXAoLQ29tcGxldGVK",
            "b2ISJC5nYXRld2F5X3Byb3RvY29sLkNvbXBsZXRlSm9iUmVxdWVzdBolLmdh",
            "dGV3YXlfcHJvdG9jb2wuQ29tcGxldGVKb2JSZXNwb25zZSIAEnoKFUNyZWF0",
            "ZVByb2Nlc3NJbnN0YW5jZRIuLmdhdGV3YXlfcHJvdG9jb2wuQ3JlYXRlUHJv",
            "Y2Vzc0luc3RhbmNlUmVxdWVzdBovLmdhdGV3YXlfcHJvdG9jb2wuQ3JlYXRl",
            "UHJvY2Vzc0luc3RhbmNlUmVzcG9uc2UiABKYAQofQ3JlYXRlUHJvY2Vzc0lu",
            "c3RhbmNlV2l0aFJlc3VsdBI4LmdhdGV3YXlfcHJvdG9jb2wuQ3JlYXRlUHJv",
            "Y2Vzc0luc3RhbmNlV2l0aFJlc3VsdFJlcXVlc3QaOS5nYXRld2F5X3Byb3Rv",
            "Y29sLkNyZWF0ZVByb2Nlc3NJbnN0YW5jZVdpdGhSZXN1bHRSZXNwb25zZSIA",
            "EmUKDURlcGxveVByb2Nlc3MSJi5nYXRld2F5X3Byb3RvY29sLkRlcGxveVBy",
            "b2Nlc3NSZXF1ZXN0GicuZ2F0ZXdheV9wcm90b2NvbC5EZXBsb3lQcm9jZXNz",
            "UmVzcG9uc2UiA4gCARJlCg5EZXBsb3lSZXNvdXJjZRInLmdhdGV3YXlfcHJv",
            "dG9jb2wuRGVwbG95UmVzb3VyY2VSZXF1ZXN0GiguZ2F0ZXdheV9wcm90b2Nv",
            "bC5EZXBsb3lSZXNvdXJjZVJlc3BvbnNlIgASUAoHRmFpbEpvYhIgLmdhdGV3",
            "YXlfcHJvdG9jb2wuRmFpbEpvYlJlcXVlc3QaIS5nYXRld2F5X3Byb3RvY29s",
            "LkZhaWxKb2JSZXNwb25zZSIAElkKClRocm93RXJyb3ISIy5nYXRld2F5X3By",
            "b3RvY29sLlRocm93RXJyb3JSZXF1ZXN0GiQuZ2F0ZXdheV9wcm90b2NvbC5U",
            "aHJvd0Vycm9yUmVzcG9uc2UiABJlCg5QdWJsaXNoTWVzc2FnZRInLmdhdGV3",
            "YXlfcHJvdG9jb2wuUHVibGlzaE1lc3NhZ2VSZXF1ZXN0GiguZ2F0ZXdheV9w",
            "cm90b2NvbC5QdWJsaXNoTWVzc2FnZVJlc3BvbnNlIgASaAoPUmVzb2x2ZUlu",
            "Y2lkZW50EiguZ2F0ZXdheV9wcm90b2NvbC5SZXNvbHZlSW5jaWRlbnRSZXF1",
            "ZXN0GikuZ2F0ZXdheV9wcm90b2NvbC5SZXNvbHZlSW5jaWRlbnRSZXNwb25z",
            "ZSIAEl8KDFNldFZhcmlhYmxlcxIlLmdhdGV3YXlfcHJvdG9jb2wuU2V0VmFy",
            "aWFibGVzUmVxdWVzdBomLmdhdGV3YXlfcHJvdG9jb2wuU2V0VmFyaWFibGVz",
            "UmVzcG9uc2UiABJTCghUb3BvbG9neRIhLmdhdGV3YXlfcHJvdG9jb2wuVG9w",
            "b2xvZ3lSZXF1ZXN0GiIuZ2F0ZXdheV9wcm90b2NvbC5Ub3BvbG9neVJlc3Bv",
            "bnNlIgASawoQVXBkYXRlSm9iUmV0cmllcxIpLmdhdGV3YXlfcHJvdG9jb2wu",
            "VXBkYXRlSm9iUmV0cmllc1JlcXVlc3QaKi5nYXRld2F5X3Byb3RvY29sLlVw",
            "ZGF0ZUpvYlJldHJpZXNSZXNwb25zZSIAEnoKFU1vZGlmeVByb2Nlc3NJbnN0",
            "YW5jZRIuLmdhdGV3YXlfcHJvdG9jb2wuTW9kaWZ5UHJvY2Vzc0luc3RhbmNl",
            "UmVxdWVzdBovLmdhdGV3YXlfcHJvdG9jb2wuTW9kaWZ5UHJvY2Vzc0luc3Rh",
            "bmNlUmVzcG9uc2UiAEIsCiFpby5jYW11bmRhLnplZWJlLmdhdGV3YXkucHJv",
            "dG9jb2xQAFoFLi87cGJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ActivateJobsRequest), global::GatewayProtocol.ActivateJobsRequest.Parser, new[]{ "Type", "Worker", "Timeout", "MaxJobsToActivate", "FetchVariable", "RequestTimeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ActivateJobsResponse), global::GatewayProtocol.ActivateJobsResponse.Parser, new[]{ "Jobs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ActivatedJob), global::GatewayProtocol.ActivatedJob.Parser, new[]{ "Key", "Type", "ProcessInstanceKey", "BpmnProcessId", "ProcessDefinitionVersion", "ProcessDefinitionKey", "ElementId", "ElementInstanceKey", "CustomHeaders", "Worker", "Retries", "Deadline", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CancelProcessInstanceRequest), global::GatewayProtocol.CancelProcessInstanceRequest.Parser, new[]{ "ProcessInstanceKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CancelProcessInstanceResponse), global::GatewayProtocol.CancelProcessInstanceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CompleteJobRequest), global::GatewayProtocol.CompleteJobRequest.Parser, new[]{ "JobKey", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CompleteJobResponse), global::GatewayProtocol.CompleteJobResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CreateProcessInstanceRequest), global::GatewayProtocol.CreateProcessInstanceRequest.Parser, new[]{ "ProcessDefinitionKey", "BpmnProcessId", "Version", "Variables", "StartInstructions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ProcessInstanceCreationStartInstruction), global::GatewayProtocol.ProcessInstanceCreationStartInstruction.Parser, new[]{ "ElementId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CreateProcessInstanceResponse), global::GatewayProtocol.CreateProcessInstanceResponse.Parser, new[]{ "ProcessDefinitionKey", "BpmnProcessId", "Version", "ProcessInstanceKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CreateProcessInstanceWithResultRequest), global::GatewayProtocol.CreateProcessInstanceWithResultRequest.Parser, new[]{ "Request", "RequestTimeout", "FetchVariables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.CreateProcessInstanceWithResultResponse), global::GatewayProtocol.CreateProcessInstanceWithResultResponse.Parser, new[]{ "ProcessDefinitionKey", "BpmnProcessId", "Version", "ProcessInstanceKey", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DeployProcessRequest), global::GatewayProtocol.DeployProcessRequest.Parser, new[]{ "Processes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ProcessRequestObject), global::GatewayProtocol.ProcessRequestObject.Parser, new[]{ "Name", "Definition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DeployProcessResponse), global::GatewayProtocol.DeployProcessResponse.Parser, new[]{ "Key", "Processes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DeployResourceRequest), global::GatewayProtocol.DeployResourceRequest.Parser, new[]{ "Resources" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.Resource), global::GatewayProtocol.Resource.Parser, new[]{ "Name", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DeployResourceResponse), global::GatewayProtocol.DeployResourceResponse.Parser, new[]{ "Key", "Deployments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.Deployment), global::GatewayProtocol.Deployment.Parser, new[]{ "Process", "Decision", "DecisionRequirements" }, new[]{ "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ProcessMetadata), global::GatewayProtocol.ProcessMetadata.Parser, new[]{ "BpmnProcessId", "Version", "ProcessDefinitionKey", "ResourceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DecisionMetadata), global::GatewayProtocol.DecisionMetadata.Parser, new[]{ "DmnDecisionId", "DmnDecisionName", "Version", "DecisionKey", "DmnDecisionRequirementsId", "DecisionRequirementsKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.DecisionRequirementsMetadata), global::GatewayProtocol.DecisionRequirementsMetadata.Parser, new[]{ "DmnDecisionRequirementsId", "DmnDecisionRequirementsName", "Version", "DecisionRequirementsKey", "ResourceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.FailJobRequest), global::GatewayProtocol.FailJobRequest.Parser, new[]{ "JobKey", "Retries", "ErrorMessage", "RetryBackOff", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.FailJobResponse), global::GatewayProtocol.FailJobResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ThrowErrorRequest), global::GatewayProtocol.ThrowErrorRequest.Parser, new[]{ "JobKey", "ErrorCode", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ThrowErrorResponse), global::GatewayProtocol.ThrowErrorResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.PublishMessageRequest), global::GatewayProtocol.PublishMessageRequest.Parser, new[]{ "Name", "CorrelationKey", "TimeToLive", "MessageId", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.PublishMessageResponse), global::GatewayProtocol.PublishMessageResponse.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ResolveIncidentRequest), global::GatewayProtocol.ResolveIncidentRequest.Parser, new[]{ "IncidentKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ResolveIncidentResponse), global::GatewayProtocol.ResolveIncidentResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.TopologyRequest), global::GatewayProtocol.TopologyRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.TopologyResponse), global::GatewayProtocol.TopologyResponse.Parser, new[]{ "Brokers", "ClusterSize", "PartitionsCount", "ReplicationFactor", "GatewayVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.BrokerInfo), global::GatewayProtocol.BrokerInfo.Parser, new[]{ "NodeId", "Host", "Port", "Partitions", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.Partition), global::GatewayProtocol.Partition.Parser, new[]{ "PartitionId", "Role", "Health" }, null, new[]{ typeof(global::GatewayProtocol.Partition.Types.PartitionBrokerRole), typeof(global::GatewayProtocol.Partition.Types.PartitionBrokerHealth) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.UpdateJobRetriesRequest), global::GatewayProtocol.UpdateJobRetriesRequest.Parser, new[]{ "JobKey", "Retries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.UpdateJobRetriesResponse), global::GatewayProtocol.UpdateJobRetriesResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.SetVariablesRequest), global::GatewayProtocol.SetVariablesRequest.Parser, new[]{ "ElementInstanceKey", "Variables", "Local" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.SetVariablesResponse), global::GatewayProtocol.SetVariablesResponse.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ModifyProcessInstanceRequest), global::GatewayProtocol.ModifyProcessInstanceRequest.Parser, new[]{ "ProcessInstanceKey", "ActivateInstructions", "TerminateInstructions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction), global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction.Parser, new[]{ "ElementId", "AncestorElementInstanceKey", "VariableInstructions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction), global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction.Parser, new[]{ "Variables", "ScopeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction), global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction.Parser, new[]{ "ElementInstanceKey" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayProtocol.ModifyProcessInstanceResponse), global::GatewayProtocol.ModifyProcessInstanceResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivateJobsRequest : pb::IMessage<ActivateJobsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateJobsRequest> _parser = new pb::MessageParser<ActivateJobsRequest>(() => new ActivateJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsRequest(ActivateJobsRequest other) : this() {
      type_ = other.type_;
      worker_ = other.worker_;
      timeout_ = other.timeout_;
      maxJobsToActivate_ = other.maxJobsToActivate_;
      fetchVariable_ = other.fetchVariable_.Clone();
      requestTimeout_ = other.requestTimeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsRequest Clone() {
      return new ActivateJobsRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// the job type, as defined in the BPMN process (e.g. &lt;zeebe:taskDefinition
    /// type="payment-service" />)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker" field.</summary>
    public const int WorkerFieldNumber = 2;
    private string worker_ = "";
    /// <summary>
    /// the name of the worker activating the jobs, mostly used for logging purposes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Worker {
      get { return worker_; }
      set {
        worker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 3;
    private long timeout_;
    /// <summary>
    /// a job returned after this call will not be activated by another call until the
    /// timeout (in ms) has been reached
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "maxJobsToActivate" field.</summary>
    public const int MaxJobsToActivateFieldNumber = 4;
    private int maxJobsToActivate_;
    /// <summary>
    /// the maximum jobs to activate by this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxJobsToActivate {
      get { return maxJobsToActivate_; }
      set {
        maxJobsToActivate_ = value;
      }
    }

    /// <summary>Field number for the "fetchVariable" field.</summary>
    public const int FetchVariableFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_fetchVariable_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> fetchVariable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// a list of variables to fetch as the job variables; if empty, all visible variables at
    /// the time of activation for the scope of the job will be returned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FetchVariable {
      get { return fetchVariable_; }
    }

    /// <summary>Field number for the "requestTimeout" field.</summary>
    public const int RequestTimeoutFieldNumber = 6;
    private long requestTimeout_;
    /// <summary>
    /// The request will be completed when at least one job is activated or after the requestTimeout (in ms).
    /// if the requestTimeout = 0, a default timeout is used.
    /// if the requestTimeout &lt; 0, long polling is disabled and the request is completed immediately, even when no job is activated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestTimeout {
      get { return requestTimeout_; }
      set {
        requestTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Worker != other.Worker) return false;
      if (Timeout != other.Timeout) return false;
      if (MaxJobsToActivate != other.MaxJobsToActivate) return false;
      if(!fetchVariable_.Equals(other.fetchVariable_)) return false;
      if (RequestTimeout != other.RequestTimeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Worker.Length != 0) hash ^= Worker.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (MaxJobsToActivate != 0) hash ^= MaxJobsToActivate.GetHashCode();
      hash ^= fetchVariable_.GetHashCode();
      if (RequestTimeout != 0L) hash ^= RequestTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Worker.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Worker);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timeout);
      }
      if (MaxJobsToActivate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxJobsToActivate);
      }
      fetchVariable_.WriteTo(output, _repeated_fetchVariable_codec);
      if (RequestTimeout != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RequestTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Worker.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Worker);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timeout);
      }
      if (MaxJobsToActivate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxJobsToActivate);
      }
      fetchVariable_.WriteTo(ref output, _repeated_fetchVariable_codec);
      if (RequestTimeout != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RequestTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Worker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Worker);
      }
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (MaxJobsToActivate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxJobsToActivate);
      }
      size += fetchVariable_.CalculateSize(_repeated_fetchVariable_codec);
      if (RequestTimeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Worker.Length != 0) {
        Worker = other.Worker;
      }
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      if (other.MaxJobsToActivate != 0) {
        MaxJobsToActivate = other.MaxJobsToActivate;
      }
      fetchVariable_.Add(other.fetchVariable_);
      if (other.RequestTimeout != 0L) {
        RequestTimeout = other.RequestTimeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Worker = input.ReadString();
            break;
          }
          case 24: {
            Timeout = input.ReadInt64();
            break;
          }
          case 32: {
            MaxJobsToActivate = input.ReadInt32();
            break;
          }
          case 42: {
            fetchVariable_.AddEntriesFrom(input, _repeated_fetchVariable_codec);
            break;
          }
          case 48: {
            RequestTimeout = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Worker = input.ReadString();
            break;
          }
          case 24: {
            Timeout = input.ReadInt64();
            break;
          }
          case 32: {
            MaxJobsToActivate = input.ReadInt32();
            break;
          }
          case 42: {
            fetchVariable_.AddEntriesFrom(ref input, _repeated_fetchVariable_codec);
            break;
          }
          case 48: {
            RequestTimeout = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivateJobsResponse : pb::IMessage<ActivateJobsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateJobsResponse> _parser = new pb::MessageParser<ActivateJobsResponse>(() => new ActivateJobsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsResponse(ActivateJobsResponse other) : this() {
      jobs_ = other.jobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobsResponse Clone() {
      return new ActivateJobsResponse(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ActivatedJob> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::GatewayProtocol.ActivatedJob.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ActivatedJob> jobs_ = new pbc::RepeatedField<global::GatewayProtocol.ActivatedJob>();
    /// <summary>
    /// list of activated jobs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ActivatedJob> Jobs {
      get { return jobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jobs_.WriteTo(ref output, _repeated_jobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateJobsResponse other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(ref input, _repeated_jobs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivatedJob : pb::IMessage<ActivatedJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivatedJob> _parser = new pb::MessageParser<ActivatedJob>(() => new ActivatedJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivatedJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivatedJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivatedJob(ActivatedJob other) : this() {
      key_ = other.key_;
      type_ = other.type_;
      processInstanceKey_ = other.processInstanceKey_;
      bpmnProcessId_ = other.bpmnProcessId_;
      processDefinitionVersion_ = other.processDefinitionVersion_;
      processDefinitionKey_ = other.processDefinitionKey_;
      elementId_ = other.elementId_;
      elementInstanceKey_ = other.elementInstanceKey_;
      customHeaders_ = other.customHeaders_;
      worker_ = other.worker_;
      retries_ = other.retries_;
      deadline_ = other.deadline_;
      variables_ = other.variables_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivatedJob Clone() {
      return new ActivatedJob(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// the key, a unique identifier for the job
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// the type of the job (should match what was requested)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processInstanceKey" field.</summary>
    public const int ProcessInstanceKeyFieldNumber = 3;
    private long processInstanceKey_;
    /// <summary>
    /// the job's process instance key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessInstanceKey {
      get { return processInstanceKey_; }
      set {
        processInstanceKey_ = value;
      }
    }

    /// <summary>Field number for the "bpmnProcessId" field.</summary>
    public const int BpmnProcessIdFieldNumber = 4;
    private string bpmnProcessId_ = "";
    /// <summary>
    /// the bpmn process ID of the job process definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BpmnProcessId {
      get { return bpmnProcessId_; }
      set {
        bpmnProcessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processDefinitionVersion" field.</summary>
    public const int ProcessDefinitionVersionFieldNumber = 5;
    private int processDefinitionVersion_;
    /// <summary>
    /// the version of the job process definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessDefinitionVersion {
      get { return processDefinitionVersion_; }
      set {
        processDefinitionVersion_ = value;
      }
    }

    /// <summary>Field number for the "processDefinitionKey" field.</summary>
    public const int ProcessDefinitionKeyFieldNumber = 6;
    private long processDefinitionKey_;
    /// <summary>
    /// the key of the job process definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessDefinitionKey {
      get { return processDefinitionKey_; }
      set {
        processDefinitionKey_ = value;
      }
    }

    /// <summary>Field number for the "elementId" field.</summary>
    public const int ElementIdFieldNumber = 7;
    private string elementId_ = "";
    /// <summary>
    /// the associated task element ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementId {
      get { return elementId_; }
      set {
        elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "elementInstanceKey" field.</summary>
    public const int ElementInstanceKeyFieldNumber = 8;
    private long elementInstanceKey_;
    /// <summary>
    /// the unique key identifying the associated task, unique within the scope of the
    /// process instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ElementInstanceKey {
      get { return elementInstanceKey_; }
      set {
        elementInstanceKey_ = value;
      }
    }

    /// <summary>Field number for the "customHeaders" field.</summary>
    public const int CustomHeadersFieldNumber = 9;
    private string customHeaders_ = "";
    /// <summary>
    /// a set of custom headers defined during modelling; returned as a serialized
    /// JSON document
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomHeaders {
      get { return customHeaders_; }
      set {
        customHeaders_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker" field.</summary>
    public const int WorkerFieldNumber = 10;
    private string worker_ = "";
    /// <summary>
    /// the name of the worker which activated this job
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Worker {
      get { return worker_; }
      set {
        worker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retries" field.</summary>
    public const int RetriesFieldNumber = 11;
    private int retries_;
    /// <summary>
    /// the amount of retries left to this job (should always be positive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Retries {
      get { return retries_; }
      set {
        retries_ = value;
      }
    }

    /// <summary>Field number for the "deadline" field.</summary>
    public const int DeadlineFieldNumber = 12;
    private long deadline_;
    /// <summary>
    /// when the job can be activated again, sent as a UNIX epoch timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Deadline {
      get { return deadline_; }
      set {
        deadline_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 13;
    private string variables_ = "";
    /// <summary>
    /// JSON document, computed at activation time, consisting of all visible variables to
    /// the task scope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivatedJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivatedJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Type != other.Type) return false;
      if (ProcessInstanceKey != other.ProcessInstanceKey) return false;
      if (BpmnProcessId != other.BpmnProcessId) return false;
      if (ProcessDefinitionVersion != other.ProcessDefinitionVersion) return false;
      if (ProcessDefinitionKey != other.ProcessDefinitionKey) return false;
      if (ElementId != other.ElementId) return false;
      if (ElementInstanceKey != other.ElementInstanceKey) return false;
      if (CustomHeaders != other.CustomHeaders) return false;
      if (Worker != other.Worker) return false;
      if (Retries != other.Retries) return false;
      if (Deadline != other.Deadline) return false;
      if (Variables != other.Variables) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (ProcessInstanceKey != 0L) hash ^= ProcessInstanceKey.GetHashCode();
      if (BpmnProcessId.Length != 0) hash ^= BpmnProcessId.GetHashCode();
      if (ProcessDefinitionVersion != 0) hash ^= ProcessDefinitionVersion.GetHashCode();
      if (ProcessDefinitionKey != 0L) hash ^= ProcessDefinitionKey.GetHashCode();
      if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
      if (ElementInstanceKey != 0L) hash ^= ElementInstanceKey.GetHashCode();
      if (CustomHeaders.Length != 0) hash ^= CustomHeaders.GetHashCode();
      if (Worker.Length != 0) hash ^= Worker.GetHashCode();
      if (Retries != 0) hash ^= Retries.GetHashCode();
      if (Deadline != 0L) hash ^= Deadline.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BpmnProcessId);
      }
      if (ProcessDefinitionVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProcessDefinitionVersion);
      }
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ElementId);
      }
      if (ElementInstanceKey != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ElementInstanceKey);
      }
      if (CustomHeaders.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CustomHeaders);
      }
      if (Worker.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Worker);
      }
      if (Retries != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Retries);
      }
      if (Deadline != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Deadline);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BpmnProcessId);
      }
      if (ProcessDefinitionVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProcessDefinitionVersion);
      }
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ElementId);
      }
      if (ElementInstanceKey != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ElementInstanceKey);
      }
      if (CustomHeaders.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CustomHeaders);
      }
      if (Worker.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Worker);
      }
      if (Retries != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Retries);
      }
      if (Deadline != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Deadline);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (ProcessInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessInstanceKey);
      }
      if (BpmnProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BpmnProcessId);
      }
      if (ProcessDefinitionVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessDefinitionVersion);
      }
      if (ProcessDefinitionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessDefinitionKey);
      }
      if (ElementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementId);
      }
      if (ElementInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElementInstanceKey);
      }
      if (CustomHeaders.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomHeaders);
      }
      if (Worker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Worker);
      }
      if (Retries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retries);
      }
      if (Deadline != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Deadline);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivatedJob other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.ProcessInstanceKey != 0L) {
        ProcessInstanceKey = other.ProcessInstanceKey;
      }
      if (other.BpmnProcessId.Length != 0) {
        BpmnProcessId = other.BpmnProcessId;
      }
      if (other.ProcessDefinitionVersion != 0) {
        ProcessDefinitionVersion = other.ProcessDefinitionVersion;
      }
      if (other.ProcessDefinitionKey != 0L) {
        ProcessDefinitionKey = other.ProcessDefinitionKey;
      }
      if (other.ElementId.Length != 0) {
        ElementId = other.ElementId;
      }
      if (other.ElementInstanceKey != 0L) {
        ElementInstanceKey = other.ElementInstanceKey;
      }
      if (other.CustomHeaders.Length != 0) {
        CustomHeaders = other.CustomHeaders;
      }
      if (other.Worker.Length != 0) {
        Worker = other.Worker;
      }
      if (other.Retries != 0) {
        Retries = other.Retries;
      }
      if (other.Deadline != 0L) {
        Deadline = other.Deadline;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 34: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 40: {
            ProcessDefinitionVersion = input.ReadInt32();
            break;
          }
          case 48: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 58: {
            ElementId = input.ReadString();
            break;
          }
          case 64: {
            ElementInstanceKey = input.ReadInt64();
            break;
          }
          case 74: {
            CustomHeaders = input.ReadString();
            break;
          }
          case 82: {
            Worker = input.ReadString();
            break;
          }
          case 88: {
            Retries = input.ReadInt32();
            break;
          }
          case 96: {
            Deadline = input.ReadInt64();
            break;
          }
          case 106: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 34: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 40: {
            ProcessDefinitionVersion = input.ReadInt32();
            break;
          }
          case 48: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 58: {
            ElementId = input.ReadString();
            break;
          }
          case 64: {
            ElementInstanceKey = input.ReadInt64();
            break;
          }
          case 74: {
            CustomHeaders = input.ReadString();
            break;
          }
          case 82: {
            Worker = input.ReadString();
            break;
          }
          case 88: {
            Retries = input.ReadInt32();
            break;
          }
          case 96: {
            Deadline = input.ReadInt64();
            break;
          }
          case 106: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CancelProcessInstanceRequest : pb::IMessage<CancelProcessInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelProcessInstanceRequest> _parser = new pb::MessageParser<CancelProcessInstanceRequest>(() => new CancelProcessInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelProcessInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceRequest(CancelProcessInstanceRequest other) : this() {
      processInstanceKey_ = other.processInstanceKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceRequest Clone() {
      return new CancelProcessInstanceRequest(this);
    }

    /// <summary>Field number for the "processInstanceKey" field.</summary>
    public const int ProcessInstanceKeyFieldNumber = 1;
    private long processInstanceKey_;
    /// <summary>
    /// the process instance key (as, for example, obtained from
    /// CreateProcessInstanceResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessInstanceKey {
      get { return processInstanceKey_; }
      set {
        processInstanceKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelProcessInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelProcessInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessInstanceKey != other.ProcessInstanceKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessInstanceKey != 0L) hash ^= ProcessInstanceKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelProcessInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessInstanceKey != 0L) {
        ProcessInstanceKey = other.ProcessInstanceKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CancelProcessInstanceResponse : pb::IMessage<CancelProcessInstanceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelProcessInstanceResponse> _parser = new pb::MessageParser<CancelProcessInstanceResponse>(() => new CancelProcessInstanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelProcessInstanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceResponse(CancelProcessInstanceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelProcessInstanceResponse Clone() {
      return new CancelProcessInstanceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelProcessInstanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelProcessInstanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelProcessInstanceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CompleteJobRequest : pb::IMessage<CompleteJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompleteJobRequest> _parser = new pb::MessageParser<CompleteJobRequest>(() => new CompleteJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobRequest(CompleteJobRequest other) : this() {
      jobKey_ = other.jobKey_;
      variables_ = other.variables_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobRequest Clone() {
      return new CompleteJobRequest(this);
    }

    /// <summary>Field number for the "jobKey" field.</summary>
    public const int JobKeyFieldNumber = 1;
    private long jobKey_;
    /// <summary>
    /// the unique job identifier, as obtained from ActivateJobsResponse
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JobKey {
      get { return jobKey_; }
      set {
        jobKey_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private string variables_ = "";
    /// <summary>
    /// a JSON document representing the variables in the current task scope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobKey != other.JobKey) return false;
      if (Variables != other.Variables) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobKey != 0L) hash ^= JobKey.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JobKey);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobKey != 0L) {
        JobKey = other.JobKey;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 18: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 18: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CompleteJobResponse : pb::IMessage<CompleteJobResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompleteJobResponse> _parser = new pb::MessageParser<CompleteJobResponse>(() => new CompleteJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobResponse(CompleteJobResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteJobResponse Clone() {
      return new CompleteJobResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteJobResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CreateProcessInstanceRequest : pb::IMessage<CreateProcessInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateProcessInstanceRequest> _parser = new pb::MessageParser<CreateProcessInstanceRequest>(() => new CreateProcessInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateProcessInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceRequest(CreateProcessInstanceRequest other) : this() {
      processDefinitionKey_ = other.processDefinitionKey_;
      bpmnProcessId_ = other.bpmnProcessId_;
      version_ = other.version_;
      variables_ = other.variables_;
      startInstructions_ = other.startInstructions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceRequest Clone() {
      return new CreateProcessInstanceRequest(this);
    }

    /// <summary>Field number for the "processDefinitionKey" field.</summary>
    public const int ProcessDefinitionKeyFieldNumber = 1;
    private long processDefinitionKey_;
    /// <summary>
    /// the unique key identifying the process definition (e.g. returned from a process
    /// in the DeployProcessResponse message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessDefinitionKey {
      get { return processDefinitionKey_; }
      set {
        processDefinitionKey_ = value;
      }
    }

    /// <summary>Field number for the "bpmnProcessId" field.</summary>
    public const int BpmnProcessIdFieldNumber = 2;
    private string bpmnProcessId_ = "";
    /// <summary>
    /// the BPMN process ID of the process definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BpmnProcessId {
      get { return bpmnProcessId_; }
      set {
        bpmnProcessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// the version of the process; set to -1 to use the latest version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 4;
    private string variables_ = "";
    /// <summary>
    /// JSON document that will instantiate the variables for the root variable scope of the
    /// process instance; it must be a JSON object, as variables will be mapped in a
    /// key-value fashion. e.g. { "a": 1, "b": 2 } will create two variables, named "a" and
    /// "b" respectively, with their associated values. [{ "a": 1, "b": 2 }] would not be a
    /// valid argument, as the root of the JSON document is an array and not an object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startInstructions" field.</summary>
    public const int StartInstructionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ProcessInstanceCreationStartInstruction> _repeated_startInstructions_codec
        = pb::FieldCodec.ForMessage(42, global::GatewayProtocol.ProcessInstanceCreationStartInstruction.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ProcessInstanceCreationStartInstruction> startInstructions_ = new pbc::RepeatedField<global::GatewayProtocol.ProcessInstanceCreationStartInstruction>();
    /// <summary>
    /// List of start instructions. If empty (default) the process instance
    /// will start at the start event. If non-empty the process instance will apply start
    /// instructions after it has been created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ProcessInstanceCreationStartInstruction> StartInstructions {
      get { return startInstructions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateProcessInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateProcessInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessDefinitionKey != other.ProcessDefinitionKey) return false;
      if (BpmnProcessId != other.BpmnProcessId) return false;
      if (Version != other.Version) return false;
      if (Variables != other.Variables) return false;
      if(!startInstructions_.Equals(other.startInstructions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessDefinitionKey != 0L) hash ^= ProcessDefinitionKey.GetHashCode();
      if (BpmnProcessId.Length != 0) hash ^= BpmnProcessId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      hash ^= startInstructions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Variables);
      }
      startInstructions_.WriteTo(output, _repeated_startInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Variables);
      }
      startInstructions_.WriteTo(ref output, _repeated_startInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessDefinitionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BpmnProcessId);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      size += startInstructions_.CalculateSize(_repeated_startInstructions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateProcessInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessDefinitionKey != 0L) {
        ProcessDefinitionKey = other.ProcessDefinitionKey;
      }
      if (other.BpmnProcessId.Length != 0) {
        BpmnProcessId = other.BpmnProcessId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      startInstructions_.Add(other.startInstructions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            Variables = input.ReadString();
            break;
          }
          case 42: {
            startInstructions_.AddEntriesFrom(input, _repeated_startInstructions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            Variables = input.ReadString();
            break;
          }
          case 42: {
            startInstructions_.AddEntriesFrom(ref input, _repeated_startInstructions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProcessInstanceCreationStartInstruction : pb::IMessage<ProcessInstanceCreationStartInstruction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessInstanceCreationStartInstruction> _parser = new pb::MessageParser<ProcessInstanceCreationStartInstruction>(() => new ProcessInstanceCreationStartInstruction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessInstanceCreationStartInstruction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessInstanceCreationStartInstruction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessInstanceCreationStartInstruction(ProcessInstanceCreationStartInstruction other) : this() {
      elementId_ = other.elementId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessInstanceCreationStartInstruction Clone() {
      return new ProcessInstanceCreationStartInstruction(this);
    }

    /// <summary>Field number for the "elementId" field.</summary>
    public const int ElementIdFieldNumber = 1;
    private string elementId_ = "";
    /// <summary>
    /// element ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementId {
      get { return elementId_; }
      set {
        elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessInstanceCreationStartInstruction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessInstanceCreationStartInstruction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ElementId != other.ElementId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ElementId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ElementId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ElementId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ElementId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessInstanceCreationStartInstruction other) {
      if (other == null) {
        return;
      }
      if (other.ElementId.Length != 0) {
        ElementId = other.ElementId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ElementId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ElementId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateProcessInstanceResponse : pb::IMessage<CreateProcessInstanceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateProcessInstanceResponse> _parser = new pb::MessageParser<CreateProcessInstanceResponse>(() => new CreateProcessInstanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateProcessInstanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceResponse(CreateProcessInstanceResponse other) : this() {
      processDefinitionKey_ = other.processDefinitionKey_;
      bpmnProcessId_ = other.bpmnProcessId_;
      version_ = other.version_;
      processInstanceKey_ = other.processInstanceKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceResponse Clone() {
      return new CreateProcessInstanceResponse(this);
    }

    /// <summary>Field number for the "processDefinitionKey" field.</summary>
    public const int ProcessDefinitionKeyFieldNumber = 1;
    private long processDefinitionKey_;
    /// <summary>
    /// the key of the process definition which was used to create the process instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessDefinitionKey {
      get { return processDefinitionKey_; }
      set {
        processDefinitionKey_ = value;
      }
    }

    /// <summary>Field number for the "bpmnProcessId" field.</summary>
    public const int BpmnProcessIdFieldNumber = 2;
    private string bpmnProcessId_ = "";
    /// <summary>
    /// the BPMN process ID of the process definition which was used to create the process
    /// instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BpmnProcessId {
      get { return bpmnProcessId_; }
      set {
        bpmnProcessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// the version of the process definition which was used to create the process instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "processInstanceKey" field.</summary>
    public const int ProcessInstanceKeyFieldNumber = 4;
    private long processInstanceKey_;
    /// <summary>
    /// the unique identifier of the created process instance; to be used wherever a request
    /// needs a process instance key (e.g. CancelProcessInstanceRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessInstanceKey {
      get { return processInstanceKey_; }
      set {
        processInstanceKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateProcessInstanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateProcessInstanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessDefinitionKey != other.ProcessDefinitionKey) return false;
      if (BpmnProcessId != other.BpmnProcessId) return false;
      if (Version != other.Version) return false;
      if (ProcessInstanceKey != other.ProcessInstanceKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessDefinitionKey != 0L) hash ^= ProcessDefinitionKey.GetHashCode();
      if (BpmnProcessId.Length != 0) hash ^= BpmnProcessId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ProcessInstanceKey != 0L) hash ^= ProcessInstanceKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessDefinitionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BpmnProcessId);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (ProcessInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessInstanceKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateProcessInstanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.ProcessDefinitionKey != 0L) {
        ProcessDefinitionKey = other.ProcessDefinitionKey;
      }
      if (other.BpmnProcessId.Length != 0) {
        BpmnProcessId = other.BpmnProcessId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ProcessInstanceKey != 0L) {
        ProcessInstanceKey = other.ProcessInstanceKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateProcessInstanceWithResultRequest : pb::IMessage<CreateProcessInstanceWithResultRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateProcessInstanceWithResultRequest> _parser = new pb::MessageParser<CreateProcessInstanceWithResultRequest>(() => new CreateProcessInstanceWithResultRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateProcessInstanceWithResultRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultRequest(CreateProcessInstanceWithResultRequest other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      requestTimeout_ = other.requestTimeout_;
      fetchVariables_ = other.fetchVariables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultRequest Clone() {
      return new CreateProcessInstanceWithResultRequest(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::GatewayProtocol.CreateProcessInstanceRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.CreateProcessInstanceRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "requestTimeout" field.</summary>
    public const int RequestTimeoutFieldNumber = 2;
    private long requestTimeout_;
    /// <summary>
    /// timeout (in ms). the request will be closed if the process is not completed
    /// before the requestTimeout.
    /// if requestTimeout = 0, uses the generic requestTimeout configured in the gateway.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestTimeout {
      get { return requestTimeout_; }
      set {
        requestTimeout_ = value;
      }
    }

    /// <summary>Field number for the "fetchVariables" field.</summary>
    public const int FetchVariablesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_fetchVariables_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> fetchVariables_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// list of names of variables to be included in `CreateProcessInstanceWithResultResponse.variables`
    /// if empty, all visible variables in the root scope will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FetchVariables {
      get { return fetchVariables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateProcessInstanceWithResultRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateProcessInstanceWithResultRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (RequestTimeout != other.RequestTimeout) return false;
      if(!fetchVariables_.Equals(other.fetchVariables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (RequestTimeout != 0L) hash ^= RequestTimeout.GetHashCode();
      hash ^= fetchVariables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (RequestTimeout != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RequestTimeout);
      }
      fetchVariables_.WriteTo(output, _repeated_fetchVariables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (RequestTimeout != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RequestTimeout);
      }
      fetchVariables_.WriteTo(ref output, _repeated_fetchVariables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (RequestTimeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestTimeout);
      }
      size += fetchVariables_.CalculateSize(_repeated_fetchVariables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateProcessInstanceWithResultRequest other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::GatewayProtocol.CreateProcessInstanceRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.RequestTimeout != 0L) {
        RequestTimeout = other.RequestTimeout;
      }
      fetchVariables_.Add(other.fetchVariables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::GatewayProtocol.CreateProcessInstanceRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 16: {
            RequestTimeout = input.ReadInt64();
            break;
          }
          case 26: {
            fetchVariables_.AddEntriesFrom(input, _repeated_fetchVariables_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::GatewayProtocol.CreateProcessInstanceRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 16: {
            RequestTimeout = input.ReadInt64();
            break;
          }
          case 26: {
            fetchVariables_.AddEntriesFrom(ref input, _repeated_fetchVariables_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateProcessInstanceWithResultResponse : pb::IMessage<CreateProcessInstanceWithResultResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateProcessInstanceWithResultResponse> _parser = new pb::MessageParser<CreateProcessInstanceWithResultResponse>(() => new CreateProcessInstanceWithResultResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateProcessInstanceWithResultResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultResponse(CreateProcessInstanceWithResultResponse other) : this() {
      processDefinitionKey_ = other.processDefinitionKey_;
      bpmnProcessId_ = other.bpmnProcessId_;
      version_ = other.version_;
      processInstanceKey_ = other.processInstanceKey_;
      variables_ = other.variables_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateProcessInstanceWithResultResponse Clone() {
      return new CreateProcessInstanceWithResultResponse(this);
    }

    /// <summary>Field number for the "processDefinitionKey" field.</summary>
    public const int ProcessDefinitionKeyFieldNumber = 1;
    private long processDefinitionKey_;
    /// <summary>
    /// the key of the process definition which was used to create the process instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessDefinitionKey {
      get { return processDefinitionKey_; }
      set {
        processDefinitionKey_ = value;
      }
    }

    /// <summary>Field number for the "bpmnProcessId" field.</summary>
    public const int BpmnProcessIdFieldNumber = 2;
    private string bpmnProcessId_ = "";
    /// <summary>
    /// the BPMN process ID of the process definition which was used to create the process
    /// instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BpmnProcessId {
      get { return bpmnProcessId_; }
      set {
        bpmnProcessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// the version of the process definition which was used to create the process instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "processInstanceKey" field.</summary>
    public const int ProcessInstanceKeyFieldNumber = 4;
    private long processInstanceKey_;
    /// <summary>
    /// the unique identifier of the created process instance; to be used wherever a request
    /// needs a process instance key (e.g. CancelProcessInstanceRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessInstanceKey {
      get { return processInstanceKey_; }
      set {
        processInstanceKey_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 5;
    private string variables_ = "";
    /// <summary>
    /// JSON document
    /// consists of visible variables in the root scope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateProcessInstanceWithResultResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateProcessInstanceWithResultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessDefinitionKey != other.ProcessDefinitionKey) return false;
      if (BpmnProcessId != other.BpmnProcessId) return false;
      if (Version != other.Version) return false;
      if (ProcessInstanceKey != other.ProcessInstanceKey) return false;
      if (Variables != other.Variables) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessDefinitionKey != 0L) hash ^= ProcessDefinitionKey.GetHashCode();
      if (BpmnProcessId.Length != 0) hash ^= BpmnProcessId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ProcessInstanceKey != 0L) hash ^= ProcessInstanceKey.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ProcessInstanceKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessDefinitionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessDefinitionKey);
      }
      if (BpmnProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BpmnProcessId);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (ProcessInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessInstanceKey);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateProcessInstanceWithResultResponse other) {
      if (other == null) {
        return;
      }
      if (other.ProcessDefinitionKey != 0L) {
        ProcessDefinitionKey = other.ProcessDefinitionKey;
      }
      if (other.BpmnProcessId.Length != 0) {
        BpmnProcessId = other.BpmnProcessId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ProcessInstanceKey != 0L) {
        ProcessInstanceKey = other.ProcessInstanceKey;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 18: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class DeployProcessRequest : pb::IMessage<DeployProcessRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployProcessRequest> _parser = new pb::MessageParser<DeployProcessRequest>(() => new DeployProcessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployProcessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessRequest(DeployProcessRequest other) : this() {
      processes_ = other.processes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessRequest Clone() {
      return new DeployProcessRequest(this);
    }

    /// <summary>Field number for the "processes" field.</summary>
    public const int ProcessesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ProcessRequestObject> _repeated_processes_codec
        = pb::FieldCodec.ForMessage(10, global::GatewayProtocol.ProcessRequestObject.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ProcessRequestObject> processes_ = new pbc::RepeatedField<global::GatewayProtocol.ProcessRequestObject>();
    /// <summary>
    /// List of process resources to deploy
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ProcessRequestObject> Processes {
      get { return processes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployProcessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployProcessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!processes_.Equals(other.processes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= processes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      processes_.WriteTo(output, _repeated_processes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      processes_.WriteTo(ref output, _repeated_processes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += processes_.CalculateSize(_repeated_processes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployProcessRequest other) {
      if (other == null) {
        return;
      }
      processes_.Add(other.processes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            processes_.AddEntriesFrom(input, _repeated_processes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            processes_.AddEntriesFrom(ref input, _repeated_processes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class ProcessRequestObject : pb::IMessage<ProcessRequestObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessRequestObject> _parser = new pb::MessageParser<ProcessRequestObject>(() => new ProcessRequestObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessRequestObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessRequestObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessRequestObject(ProcessRequestObject other) : this() {
      name_ = other.name_;
      definition_ = other.definition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessRequestObject Clone() {
      return new ProcessRequestObject(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the resource basename, e.g. myProcess.bpmn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "definition" field.</summary>
    public const int DefinitionFieldNumber = 2;
    private pb::ByteString definition_ = pb::ByteString.Empty;
    /// <summary>
    /// the process definition as a UTF8-encoded string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Definition {
      get { return definition_; }
      set {
        definition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessRequestObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessRequestObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Definition != other.Definition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Definition.Length != 0) hash ^= Definition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Definition.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Definition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Definition.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Definition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Definition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Definition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessRequestObject other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Definition.Length != 0) {
        Definition = other.Definition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Definition = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Definition = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class DeployProcessResponse : pb::IMessage<DeployProcessResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployProcessResponse> _parser = new pb::MessageParser<DeployProcessResponse>(() => new DeployProcessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployProcessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessResponse(DeployProcessResponse other) : this() {
      key_ = other.key_;
      processes_ = other.processes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployProcessResponse Clone() {
      return new DeployProcessResponse(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// the unique key identifying the deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "processes" field.</summary>
    public const int ProcessesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ProcessMetadata> _repeated_processes_codec
        = pb::FieldCodec.ForMessage(18, global::GatewayProtocol.ProcessMetadata.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ProcessMetadata> processes_ = new pbc::RepeatedField<global::GatewayProtocol.ProcessMetadata>();
    /// <summary>
    /// a list of deployed processes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ProcessMetadata> Processes {
      get { return processes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployProcessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployProcessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if(!processes_.Equals(other.processes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      hash ^= processes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      processes_.WriteTo(output, _repeated_processes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      processes_.WriteTo(ref output, _repeated_processes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      size += processes_.CalculateSize(_repeated_processes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployProcessResponse other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      processes_.Add(other.processes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            processes_.AddEntriesFrom(input, _repeated_processes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            processes_.AddEntriesFrom(ref input, _repeated_processes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeployResourceRequest : pb::IMessage<DeployResourceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployResourceRequest> _parser = new pb::MessageParser<DeployResourceRequest>(() => new DeployResourceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployResourceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceRequest(DeployResourceRequest other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceRequest Clone() {
      return new DeployResourceRequest(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GatewayProtocol.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::GatewayProtocol.Resource.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.Resource> resources_ = new pbc::RepeatedField<global::GatewayProtocol.Resource>();
    /// <summary>
    /// list of resources to deploy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployResourceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployResourceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployResourceRequest other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the resource name, e.g. myProcess.bpmn or myDecision.dmn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// the file content as a UTF8-encoded string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeployResourceResponse : pb::IMessage<DeployResourceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployResourceResponse> _parser = new pb::MessageParser<DeployResourceResponse>(() => new DeployResourceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployResourceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceResponse(DeployResourceResponse other) : this() {
      key_ = other.key_;
      deployments_ = other.deployments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployResourceResponse Clone() {
      return new DeployResourceResponse(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// the unique key identifying the deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "deployments" field.</summary>
    public const int DeploymentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GatewayProtocol.Deployment> _repeated_deployments_codec
        = pb::FieldCodec.ForMessage(18, global::GatewayProtocol.Deployment.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.Deployment> deployments_ = new pbc::RepeatedField<global::GatewayProtocol.Deployment>();
    /// <summary>
    /// a list of deployed resources, e.g. processes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.Deployment> Deployments {
      get { return deployments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployResourceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployResourceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if(!deployments_.Equals(other.deployments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      hash ^= deployments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      deployments_.WriteTo(output, _repeated_deployments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      deployments_.WriteTo(ref output, _repeated_deployments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      size += deployments_.CalculateSize(_repeated_deployments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployResourceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      deployments_.Add(other.deployments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            deployments_.AddEntriesFrom(input, _repeated_deployments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 18: {
            deployments_.AddEntriesFrom(ref input, _repeated_deployments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Deployment : pb::IMessage<Deployment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Deployment> _parser = new pb::MessageParser<Deployment>(() => new Deployment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Deployment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployment(Deployment other) : this() {
      switch (other.MetadataCase) {
        case MetadataOneofCase.Process:
          Process = other.Process.Clone();
          break;
        case MetadataOneofCase.Decision:
          Decision = other.Decision.Clone();
          break;
        case MetadataOneofCase.DecisionRequirements:
          DecisionRequirements = other.DecisionRequirements.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployment Clone() {
      return new Deployment(this);
    }

    /// <summary>Field number for the "process" field.</summary>
    public const int ProcessFieldNumber = 1;
    /// <summary>
    /// metadata of a deployed process
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.ProcessMetadata Process {
      get { return metadataCase_ == MetadataOneofCase.Process ? (global::GatewayProtocol.ProcessMetadata) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.Process;
      }
    }

    /// <summary>Field number for the "decision" field.</summary>
    public const int DecisionFieldNumber = 2;
    /// <summary>
    /// metadata of a deployed decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.DecisionMetadata Decision {
      get { return metadataCase_ == MetadataOneofCase.Decision ? (global::GatewayProtocol.DecisionMetadata) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.Decision;
      }
    }

    /// <summary>Field number for the "decisionRequirements" field.</summary>
    public const int DecisionRequirementsFieldNumber = 3;
    /// <summary>
    /// metadata of a deployed decision requirements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.DecisionRequirementsMetadata DecisionRequirements {
      get { return metadataCase_ == MetadataOneofCase.DecisionRequirements ? (global::GatewayProtocol.DecisionRequirementsMetadata) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.DecisionRequirements;
      }
    }

    private object metadata_;
    /// <summary>Enum of possible cases for the "Metadata" oneof.</summary>
    public enum MetadataOneofCase {
      None = 0,
      Process = 1,
      Decision = 2,
      DecisionRequirements = 3,
    }
    private MetadataOneofCase metadataCase_ = MetadataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataOneofCase MetadataCase {
      get { return metadataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetadata() {
      metadataCase_ = MetadataOneofCase.None;
      metadata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Deployment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Deployment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Process, other.Process)) return false;
      if (!object.Equals(Decision, other.Decision)) return false;
      if (!object.Equals(DecisionRequirements, other.DecisionRequirements)) return false;
      if (MetadataCase != other.MetadataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadataCase_ == MetadataOneofCase.Process) hash ^= Process.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.Decision) hash ^= Decision.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DecisionRequirements) hash ^= DecisionRequirements.GetHashCode();
      hash ^= (int) metadataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadataCase_ == MetadataOneofCase.Process) {
        output.WriteRawTag(10);
        output.WriteMessage(Process);
      }
      if (metadataCase_ == MetadataOneofCase.Decision) {
        output.WriteRawTag(18);
        output.WriteMessage(Decision);
      }
      if (metadataCase_ == MetadataOneofCase.DecisionRequirements) {
        output.WriteRawTag(26);
        output.WriteMessage(DecisionRequirements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadataCase_ == MetadataOneofCase.Process) {
        output.WriteRawTag(10);
        output.WriteMessage(Process);
      }
      if (metadataCase_ == MetadataOneofCase.Decision) {
        output.WriteRawTag(18);
        output.WriteMessage(Decision);
      }
      if (metadataCase_ == MetadataOneofCase.DecisionRequirements) {
        output.WriteRawTag(26);
        output.WriteMessage(DecisionRequirements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadataCase_ == MetadataOneofCase.Process) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Process);
      }
      if (metadataCase_ == MetadataOneofCase.Decision) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Decision);
      }
      if (metadataCase_ == MetadataOneofCase.DecisionRequirements) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DecisionRequirements);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Deployment other) {
      if (other == null) {
        return;
      }
      switch (other.MetadataCase) {
        case MetadataOneofCase.Process:
          if (Process == null) {
            Process = new global::GatewayProtocol.ProcessMetadata();
          }
          Process.MergeFrom(other.Process);
          break;
        case MetadataOneofCase.Decision:
          if (Decision == null) {
            Decision = new global::GatewayProtocol.DecisionMetadata();
          }
          Decision.MergeFrom(other.Decision);
          break;
        case MetadataOneofCase.DecisionRequirements:
          if (DecisionRequirements == null) {
            DecisionRequirements = new global::GatewayProtocol.DecisionRequirementsMetadata();
          }
          DecisionRequirements.MergeFrom(other.DecisionRequirements);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::GatewayProtocol.ProcessMetadata subBuilder = new global::GatewayProtocol.ProcessMetadata();
            if (metadataCase_ == MetadataOneofCase.Process) {
              subBuilder.MergeFrom(Process);
            }
            input.ReadMessage(subBuilder);
            Process = subBuilder;
            break;
          }
          case 18: {
            global::GatewayProtocol.DecisionMetadata subBuilder = new global::GatewayProtocol.DecisionMetadata();
            if (metadataCase_ == MetadataOneofCase.Decision) {
              subBuilder.MergeFrom(Decision);
            }
            input.ReadMessage(subBuilder);
            Decision = subBuilder;
            break;
          }
          case 26: {
            global::GatewayProtocol.DecisionRequirementsMetadata subBuilder = new global::GatewayProtocol.DecisionRequirementsMetadata();
            if (metadataCase_ == MetadataOneofCase.DecisionRequirements) {
              subBuilder.MergeFrom(DecisionRequirements);
            }
            input.ReadMessage(subBuilder);
            DecisionRequirements = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::GatewayProtocol.ProcessMetadata subBuilder = new global::GatewayProtocol.ProcessMetadata();
            if (metadataCase_ == MetadataOneofCase.Process) {
              subBuilder.MergeFrom(Process);
            }
            input.ReadMessage(subBuilder);
            Process = subBuilder;
            break;
          }
          case 18: {
            global::GatewayProtocol.DecisionMetadata subBuilder = new global::GatewayProtocol.DecisionMetadata();
            if (metadataCase_ == MetadataOneofCase.Decision) {
              subBuilder.MergeFrom(Decision);
            }
            input.ReadMessage(subBuilder);
            Decision = subBuilder;
            break;
          }
          case 26: {
            global::GatewayProtocol.DecisionRequirementsMetadata subBuilder = new global::GatewayProtocol.DecisionRequirementsMetadata();
            if (metadataCase_ == MetadataOneofCase.DecisionRequirements) {
              subBuilder.MergeFrom(DecisionRequirements);
            }
            input.ReadMessage(subBuilder);
            DecisionRequirements = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProcessMetadata : pb::IMessage<ProcessMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessMetadata> _parser = new pb::MessageParser<ProcessMetadata>(() => new ProcessMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessMetadata(ProcessMetadata other) : this() {
      bpmnProcessId_ = other.bpmnProcessId_;
      version_ = other.version_;
      processDefinitionKey_ = other.processDefinitionKey_;
      resourceName_ = other.resourceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessMetadata Clone() {
      return new ProcessMetadata(this);
    }

    /// <summary>Field number for the "bpmnProcessId" field.</summary>
    public const int BpmnProcessIdFieldNumber = 1;
    private string bpmnProcessId_ = "";
    /// <summary>
    /// the bpmn process ID, as parsed during deployment; together with the version forms a
    /// unique identifier for a specific process definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BpmnProcessId {
      get { return bpmnProcessId_; }
      set {
        bpmnProcessId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    /// <summary>
    /// the assigned process version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "processDefinitionKey" field.</summary>
    public const int ProcessDefinitionKeyFieldNumber = 3;
    private long processDefinitionKey_;
    /// <summary>
    /// the assigned key, which acts as a unique identifier for this process
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessDefinitionKey {
      get { return processDefinitionKey_; }
      set {
        processDefinitionKey_ = value;
      }
    }

    /// <summary>Field number for the "resourceName" field.</summary>
    public const int ResourceNameFieldNumber = 4;
    private string resourceName_ = "";
    /// <summary>
    /// the resource name (see: ProcessRequestObject.name) from which this process was
    /// parsed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BpmnProcessId != other.BpmnProcessId) return false;
      if (Version != other.Version) return false;
      if (ProcessDefinitionKey != other.ProcessDefinitionKey) return false;
      if (ResourceName != other.ResourceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BpmnProcessId.Length != 0) hash ^= BpmnProcessId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ProcessDefinitionKey != 0L) hash ^= ProcessDefinitionKey.GetHashCode();
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BpmnProcessId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BpmnProcessId);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (ProcessDefinitionKey != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProcessDefinitionKey);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BpmnProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BpmnProcessId);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (ProcessDefinitionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessDefinitionKey);
      }
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessMetadata other) {
      if (other == null) {
        return;
      }
      if (other.BpmnProcessId.Length != 0) {
        BpmnProcessId = other.BpmnProcessId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ProcessDefinitionKey != 0L) {
        ProcessDefinitionKey = other.ProcessDefinitionKey;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 34: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BpmnProcessId = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            ProcessDefinitionKey = input.ReadInt64();
            break;
          }
          case 34: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DecisionMetadata : pb::IMessage<DecisionMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecisionMetadata> _parser = new pb::MessageParser<DecisionMetadata>(() => new DecisionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecisionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionMetadata(DecisionMetadata other) : this() {
      dmnDecisionId_ = other.dmnDecisionId_;
      dmnDecisionName_ = other.dmnDecisionName_;
      version_ = other.version_;
      decisionKey_ = other.decisionKey_;
      dmnDecisionRequirementsId_ = other.dmnDecisionRequirementsId_;
      decisionRequirementsKey_ = other.decisionRequirementsKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionMetadata Clone() {
      return new DecisionMetadata(this);
    }

    /// <summary>Field number for the "dmnDecisionId" field.</summary>
    public const int DmnDecisionIdFieldNumber = 1;
    private string dmnDecisionId_ = "";
    /// <summary>
    /// the dmn decision ID, as parsed during deployment; together with the
    /// versions forms a unique identifier for a specific decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DmnDecisionId {
      get { return dmnDecisionId_; }
      set {
        dmnDecisionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dmnDecisionName" field.</summary>
    public const int DmnDecisionNameFieldNumber = 2;
    private string dmnDecisionName_ = "";
    /// <summary>
    /// the dmn name of the decision, as parsed during deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DmnDecisionName {
      get { return dmnDecisionName_; }
      set {
        dmnDecisionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// the assigned decision version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "decisionKey" field.</summary>
    public const int DecisionKeyFieldNumber = 4;
    private long decisionKey_;
    /// <summary>
    /// the assigned decision key, which acts as a unique identifier for this
    /// decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecisionKey {
      get { return decisionKey_; }
      set {
        decisionKey_ = value;
      }
    }

    /// <summary>Field number for the "dmnDecisionRequirementsId" field.</summary>
    public const int DmnDecisionRequirementsIdFieldNumber = 5;
    private string dmnDecisionRequirementsId_ = "";
    /// <summary>
    /// the dmn ID of the decision requirements graph that this decision is part
    /// of, as parsed during deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DmnDecisionRequirementsId {
      get { return dmnDecisionRequirementsId_; }
      set {
        dmnDecisionRequirementsId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decisionRequirementsKey" field.</summary>
    public const int DecisionRequirementsKeyFieldNumber = 6;
    private long decisionRequirementsKey_;
    /// <summary>
    /// the assigned key of the decision requirements graph that this decision is
    /// part of
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecisionRequirementsKey {
      get { return decisionRequirementsKey_; }
      set {
        decisionRequirementsKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecisionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecisionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DmnDecisionId != other.DmnDecisionId) return false;
      if (DmnDecisionName != other.DmnDecisionName) return false;
      if (Version != other.Version) return false;
      if (DecisionKey != other.DecisionKey) return false;
      if (DmnDecisionRequirementsId != other.DmnDecisionRequirementsId) return false;
      if (DecisionRequirementsKey != other.DecisionRequirementsKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DmnDecisionId.Length != 0) hash ^= DmnDecisionId.GetHashCode();
      if (DmnDecisionName.Length != 0) hash ^= DmnDecisionName.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (DecisionKey != 0L) hash ^= DecisionKey.GetHashCode();
      if (DmnDecisionRequirementsId.Length != 0) hash ^= DmnDecisionRequirementsId.GetHashCode();
      if (DecisionRequirementsKey != 0L) hash ^= DecisionRequirementsKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DmnDecisionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DmnDecisionId);
      }
      if (DmnDecisionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DmnDecisionName);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (DecisionKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DecisionKey);
      }
      if (DmnDecisionRequirementsId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DmnDecisionRequirementsId);
      }
      if (DecisionRequirementsKey != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(DecisionRequirementsKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DmnDecisionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DmnDecisionId);
      }
      if (DmnDecisionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DmnDecisionName);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (DecisionKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DecisionKey);
      }
      if (DmnDecisionRequirementsId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DmnDecisionRequirementsId);
      }
      if (DecisionRequirementsKey != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(DecisionRequirementsKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DmnDecisionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DmnDecisionId);
      }
      if (DmnDecisionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DmnDecisionName);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (DecisionKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecisionKey);
      }
      if (DmnDecisionRequirementsId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DmnDecisionRequirementsId);
      }
      if (DecisionRequirementsKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecisionRequirementsKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecisionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.DmnDecisionId.Length != 0) {
        DmnDecisionId = other.DmnDecisionId;
      }
      if (other.DmnDecisionName.Length != 0) {
        DmnDecisionName = other.DmnDecisionName;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.DecisionKey != 0L) {
        DecisionKey = other.DecisionKey;
      }
      if (other.DmnDecisionRequirementsId.Length != 0) {
        DmnDecisionRequirementsId = other.DmnDecisionRequirementsId;
      }
      if (other.DecisionRequirementsKey != 0L) {
        DecisionRequirementsKey = other.DecisionRequirementsKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DmnDecisionId = input.ReadString();
            break;
          }
          case 18: {
            DmnDecisionName = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            DecisionKey = input.ReadInt64();
            break;
          }
          case 42: {
            DmnDecisionRequirementsId = input.ReadString();
            break;
          }
          case 48: {
            DecisionRequirementsKey = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DmnDecisionId = input.ReadString();
            break;
          }
          case 18: {
            DmnDecisionName = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            DecisionKey = input.ReadInt64();
            break;
          }
          case 42: {
            DmnDecisionRequirementsId = input.ReadString();
            break;
          }
          case 48: {
            DecisionRequirementsKey = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DecisionRequirementsMetadata : pb::IMessage<DecisionRequirementsMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecisionRequirementsMetadata> _parser = new pb::MessageParser<DecisionRequirementsMetadata>(() => new DecisionRequirementsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecisionRequirementsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionRequirementsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionRequirementsMetadata(DecisionRequirementsMetadata other) : this() {
      dmnDecisionRequirementsId_ = other.dmnDecisionRequirementsId_;
      dmnDecisionRequirementsName_ = other.dmnDecisionRequirementsName_;
      version_ = other.version_;
      decisionRequirementsKey_ = other.decisionRequirementsKey_;
      resourceName_ = other.resourceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionRequirementsMetadata Clone() {
      return new DecisionRequirementsMetadata(this);
    }

    /// <summary>Field number for the "dmnDecisionRequirementsId" field.</summary>
    public const int DmnDecisionRequirementsIdFieldNumber = 1;
    private string dmnDecisionRequirementsId_ = "";
    /// <summary>
    /// the dmn decision requirements ID, as parsed during deployment; together
    /// with the versions forms a unique identifier for a specific decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DmnDecisionRequirementsId {
      get { return dmnDecisionRequirementsId_; }
      set {
        dmnDecisionRequirementsId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dmnDecisionRequirementsName" field.</summary>
    public const int DmnDecisionRequirementsNameFieldNumber = 2;
    private string dmnDecisionRequirementsName_ = "";
    /// <summary>
    /// the dmn name of the decision requirements, as parsed during deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DmnDecisionRequirementsName {
      get { return dmnDecisionRequirementsName_; }
      set {
        dmnDecisionRequirementsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// the assigned decision requirements version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "decisionRequirementsKey" field.</summary>
    public const int DecisionRequirementsKeyFieldNumber = 4;
    private long decisionRequirementsKey_;
    /// <summary>
    /// the assigned decision requirements key, which acts as a unique identifier
    /// for this decision requirements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecisionRequirementsKey {
      get { return decisionRequirementsKey_; }
      set {
        decisionRequirementsKey_ = value;
      }
    }

    /// <summary>Field number for the "resourceName" field.</summary>
    public const int ResourceNameFieldNumber = 5;
    private string resourceName_ = "";
    /// <summary>
    /// the resource name (see: Resource.name) from which this decision
    /// requirements was parsed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecisionRequirementsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecisionRequirementsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DmnDecisionRequirementsId != other.DmnDecisionRequirementsId) return false;
      if (DmnDecisionRequirementsName != other.DmnDecisionRequirementsName) return false;
      if (Version != other.Version) return false;
      if (DecisionRequirementsKey != other.DecisionRequirementsKey) return false;
      if (ResourceName != other.ResourceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DmnDecisionRequirementsId.Length != 0) hash ^= DmnDecisionRequirementsId.GetHashCode();
      if (DmnDecisionRequirementsName.Length != 0) hash ^= DmnDecisionRequirementsName.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (DecisionRequirementsKey != 0L) hash ^= DecisionRequirementsKey.GetHashCode();
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DmnDecisionRequirementsId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DmnDecisionRequirementsId);
      }
      if (DmnDecisionRequirementsName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DmnDecisionRequirementsName);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (DecisionRequirementsKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DecisionRequirementsKey);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DmnDecisionRequirementsId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DmnDecisionRequirementsId);
      }
      if (DmnDecisionRequirementsName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DmnDecisionRequirementsName);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (DecisionRequirementsKey != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DecisionRequirementsKey);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DmnDecisionRequirementsId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DmnDecisionRequirementsId);
      }
      if (DmnDecisionRequirementsName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DmnDecisionRequirementsName);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (DecisionRequirementsKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecisionRequirementsKey);
      }
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecisionRequirementsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.DmnDecisionRequirementsId.Length != 0) {
        DmnDecisionRequirementsId = other.DmnDecisionRequirementsId;
      }
      if (other.DmnDecisionRequirementsName.Length != 0) {
        DmnDecisionRequirementsName = other.DmnDecisionRequirementsName;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.DecisionRequirementsKey != 0L) {
        DecisionRequirementsKey = other.DecisionRequirementsKey;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DmnDecisionRequirementsId = input.ReadString();
            break;
          }
          case 18: {
            DmnDecisionRequirementsName = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            DecisionRequirementsKey = input.ReadInt64();
            break;
          }
          case 42: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DmnDecisionRequirementsId = input.ReadString();
            break;
          }
          case 18: {
            DmnDecisionRequirementsName = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            DecisionRequirementsKey = input.ReadInt64();
            break;
          }
          case 42: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FailJobRequest : pb::IMessage<FailJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FailJobRequest> _parser = new pb::MessageParser<FailJobRequest>(() => new FailJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FailJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobRequest(FailJobRequest other) : this() {
      jobKey_ = other.jobKey_;
      retries_ = other.retries_;
      errorMessage_ = other.errorMessage_;
      retryBackOff_ = other.retryBackOff_;
      variables_ = other.variables_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobRequest Clone() {
      return new FailJobRequest(this);
    }

    /// <summary>Field number for the "jobKey" field.</summary>
    public const int JobKeyFieldNumber = 1;
    private long jobKey_;
    /// <summary>
    /// the unique job identifier, as obtained when activating the job
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JobKey {
      get { return jobKey_; }
      set {
        jobKey_ = value;
      }
    }

    /// <summary>Field number for the "retries" field.</summary>
    public const int RetriesFieldNumber = 2;
    private int retries_;
    /// <summary>
    /// the amount of retries the job should have left
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Retries {
      get { return retries_; }
      set {
        retries_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    /// an optional message describing why the job failed
    /// this is particularly useful if a job runs out of retries and an incident is raised,
    /// as it this message can help explain why an incident was raised
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retryBackOff" field.</summary>
    public const int RetryBackOffFieldNumber = 4;
    private long retryBackOff_;
    /// <summary>
    /// the backoff timeout (in ms) for the next retry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RetryBackOff {
      get { return retryBackOff_; }
      set {
        retryBackOff_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 5;
    private string variables_ = "";
    /// <summary>
    /// JSON document that will instantiate the variables at the local scope of the
    /// job's associated task; it must be a JSON object, as variables will be mapped in a
    /// key-value fashion. e.g. { "a": 1, "b": 2 } will create two variables, named "a" and
    /// "b" respectively, with their associated values. [{ "a": 1, "b": 2 }] would not be a
    /// valid argument, as the root of the JSON document is an array and not an object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FailJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FailJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobKey != other.JobKey) return false;
      if (Retries != other.Retries) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (RetryBackOff != other.RetryBackOff) return false;
      if (Variables != other.Variables) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobKey != 0L) hash ^= JobKey.GetHashCode();
      if (Retries != 0) hash ^= Retries.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (RetryBackOff != 0L) hash ^= RetryBackOff.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Retries != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retries);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (RetryBackOff != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RetryBackOff);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Retries != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retries);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (RetryBackOff != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RetryBackOff);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JobKey);
      }
      if (Retries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retries);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (RetryBackOff != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RetryBackOff);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FailJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobKey != 0L) {
        JobKey = other.JobKey;
      }
      if (other.Retries != 0) {
        Retries = other.Retries;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.RetryBackOff != 0L) {
        RetryBackOff = other.RetryBackOff;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 16: {
            Retries = input.ReadInt32();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 32: {
            RetryBackOff = input.ReadInt64();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 16: {
            Retries = input.ReadInt32();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 32: {
            RetryBackOff = input.ReadInt64();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FailJobResponse : pb::IMessage<FailJobResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FailJobResponse> _parser = new pb::MessageParser<FailJobResponse>(() => new FailJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FailJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobResponse(FailJobResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FailJobResponse Clone() {
      return new FailJobResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FailJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FailJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FailJobResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ThrowErrorRequest : pb::IMessage<ThrowErrorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrowErrorRequest> _parser = new pb::MessageParser<ThrowErrorRequest>(() => new ThrowErrorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowErrorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorRequest(ThrowErrorRequest other) : this() {
      jobKey_ = other.jobKey_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorRequest Clone() {
      return new ThrowErrorRequest(this);
    }

    /// <summary>Field number for the "jobKey" field.</summary>
    public const int JobKeyFieldNumber = 1;
    private long jobKey_;
    /// <summary>
    /// the unique job identifier, as obtained when activating the job
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JobKey {
      get { return jobKey_; }
      set {
        jobKey_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private string errorCode_ = "";
    /// <summary>
    /// the error code that will be matched with an error catch event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    /// an optional error message that provides additional context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowErrorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowErrorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobKey != other.JobKey) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobKey != 0L) hash ^= JobKey.GetHashCode();
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JobKey);
      }
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowErrorRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobKey != 0L) {
        JobKey = other.JobKey;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 18: {
            ErrorCode = input.ReadString();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 18: {
            ErrorCode = input.ReadString();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ThrowErrorResponse : pb::IMessage<ThrowErrorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrowErrorResponse> _parser = new pb::MessageParser<ThrowErrorResponse>(() => new ThrowErrorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorResponse(ThrowErrorResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowErrorResponse Clone() {
      return new ThrowErrorResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowErrorResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PublishMessageRequest : pb::IMessage<PublishMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishMessageRequest> _parser = new pb::MessageParser<PublishMessageRequest>(() => new PublishMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageRequest(PublishMessageRequest other) : this() {
      name_ = other.name_;
      correlationKey_ = other.correlationKey_;
      timeToLive_ = other.timeToLive_;
      messageId_ = other.messageId_;
      variables_ = other.variables_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageRequest Clone() {
      return new PublishMessageRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the name of the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correlationKey" field.</summary>
    public const int CorrelationKeyFieldNumber = 2;
    private string correlationKey_ = "";
    /// <summary>
    /// the correlation key of the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrelationKey {
      get { return correlationKey_; }
      set {
        correlationKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeToLive" field.</summary>
    public const int TimeToLiveFieldNumber = 3;
    private long timeToLive_;
    /// <summary>
    /// how long the message should be buffered on the broker, in milliseconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeToLive {
      get { return timeToLive_; }
      set {
        timeToLive_ = value;
      }
    }

    /// <summary>Field number for the "messageId" field.</summary>
    public const int MessageIdFieldNumber = 4;
    private string messageId_ = "";
    /// <summary>
    /// the unique ID of the message; can be omitted. only useful to ensure only one message
    /// with the given ID will ever be published (during its lifetime)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageId {
      get { return messageId_; }
      set {
        messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 5;
    private string variables_ = "";
    /// <summary>
    /// the message variables as a JSON document; to be valid, the root of the document must be an
    /// object, e.g. { "a": "foo" }. [ "foo" ] would not be valid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CorrelationKey != other.CorrelationKey) return false;
      if (TimeToLive != other.TimeToLive) return false;
      if (MessageId != other.MessageId) return false;
      if (Variables != other.Variables) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CorrelationKey.Length != 0) hash ^= CorrelationKey.GetHashCode();
      if (TimeToLive != 0L) hash ^= TimeToLive.GetHashCode();
      if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CorrelationKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrelationKey);
      }
      if (TimeToLive != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeToLive);
      }
      if (MessageId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MessageId);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CorrelationKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrelationKey);
      }
      if (TimeToLive != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeToLive);
      }
      if (MessageId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MessageId);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Variables);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CorrelationKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationKey);
      }
      if (TimeToLive != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeToLive);
      }
      if (MessageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CorrelationKey.Length != 0) {
        CorrelationKey = other.CorrelationKey;
      }
      if (other.TimeToLive != 0L) {
        TimeToLive = other.TimeToLive;
      }
      if (other.MessageId.Length != 0) {
        MessageId = other.MessageId;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CorrelationKey = input.ReadString();
            break;
          }
          case 24: {
            TimeToLive = input.ReadInt64();
            break;
          }
          case 34: {
            MessageId = input.ReadString();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CorrelationKey = input.ReadString();
            break;
          }
          case 24: {
            TimeToLive = input.ReadInt64();
            break;
          }
          case 34: {
            MessageId = input.ReadString();
            break;
          }
          case 42: {
            Variables = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PublishMessageResponse : pb::IMessage<PublishMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishMessageResponse> _parser = new pb::MessageParser<PublishMessageResponse>(() => new PublishMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageResponse(PublishMessageResponse other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishMessageResponse Clone() {
      return new PublishMessageResponse(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// the unique ID of the message that was published
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResolveIncidentRequest : pb::IMessage<ResolveIncidentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResolveIncidentRequest> _parser = new pb::MessageParser<ResolveIncidentRequest>(() => new ResolveIncidentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveIncidentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentRequest(ResolveIncidentRequest other) : this() {
      incidentKey_ = other.incidentKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentRequest Clone() {
      return new ResolveIncidentRequest(this);
    }

    /// <summary>Field number for the "incidentKey" field.</summary>
    public const int IncidentKeyFieldNumber = 1;
    private long incidentKey_;
    /// <summary>
    /// the unique ID of the incident to resolve
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IncidentKey {
      get { return incidentKey_; }
      set {
        incidentKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveIncidentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveIncidentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncidentKey != other.IncidentKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IncidentKey != 0L) hash ^= IncidentKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IncidentKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IncidentKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IncidentKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IncidentKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IncidentKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IncidentKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveIncidentRequest other) {
      if (other == null) {
        return;
      }
      if (other.IncidentKey != 0L) {
        IncidentKey = other.IncidentKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IncidentKey = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IncidentKey = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResolveIncidentResponse : pb::IMessage<ResolveIncidentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResolveIncidentResponse> _parser = new pb::MessageParser<ResolveIncidentResponse>(() => new ResolveIncidentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveIncidentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentResponse(ResolveIncidentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveIncidentResponse Clone() {
      return new ResolveIncidentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveIncidentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveIncidentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveIncidentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TopologyRequest : pb::IMessage<TopologyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopologyRequest> _parser = new pb::MessageParser<TopologyRequest>(() => new TopologyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopologyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyRequest(TopologyRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyRequest Clone() {
      return new TopologyRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopologyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopologyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopologyRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TopologyResponse : pb::IMessage<TopologyResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopologyResponse> _parser = new pb::MessageParser<TopologyResponse>(() => new TopologyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopologyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyResponse(TopologyResponse other) : this() {
      brokers_ = other.brokers_.Clone();
      clusterSize_ = other.clusterSize_;
      partitionsCount_ = other.partitionsCount_;
      replicationFactor_ = other.replicationFactor_;
      gatewayVersion_ = other.gatewayVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyResponse Clone() {
      return new TopologyResponse(this);
    }

    /// <summary>Field number for the "brokers" field.</summary>
    public const int BrokersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GatewayProtocol.BrokerInfo> _repeated_brokers_codec
        = pb::FieldCodec.ForMessage(10, global::GatewayProtocol.BrokerInfo.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.BrokerInfo> brokers_ = new pbc::RepeatedField<global::GatewayProtocol.BrokerInfo>();
    /// <summary>
    /// list of brokers part of this cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.BrokerInfo> Brokers {
      get { return brokers_; }
    }

    /// <summary>Field number for the "clusterSize" field.</summary>
    public const int ClusterSizeFieldNumber = 2;
    private int clusterSize_;
    /// <summary>
    /// how many nodes are in the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClusterSize {
      get { return clusterSize_; }
      set {
        clusterSize_ = value;
      }
    }

    /// <summary>Field number for the "partitionsCount" field.</summary>
    public const int PartitionsCountFieldNumber = 3;
    private int partitionsCount_;
    /// <summary>
    /// how many partitions are spread across the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PartitionsCount {
      get { return partitionsCount_; }
      set {
        partitionsCount_ = value;
      }
    }

    /// <summary>Field number for the "replicationFactor" field.</summary>
    public const int ReplicationFactorFieldNumber = 4;
    private int replicationFactor_;
    /// <summary>
    /// configured replication factor for this cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReplicationFactor {
      get { return replicationFactor_; }
      set {
        replicationFactor_ = value;
      }
    }

    /// <summary>Field number for the "gatewayVersion" field.</summary>
    public const int GatewayVersionFieldNumber = 5;
    private string gatewayVersion_ = "";
    /// <summary>
    /// gateway version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GatewayVersion {
      get { return gatewayVersion_; }
      set {
        gatewayVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopologyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopologyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!brokers_.Equals(other.brokers_)) return false;
      if (ClusterSize != other.ClusterSize) return false;
      if (PartitionsCount != other.PartitionsCount) return false;
      if (ReplicationFactor != other.ReplicationFactor) return false;
      if (GatewayVersion != other.GatewayVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= brokers_.GetHashCode();
      if (ClusterSize != 0) hash ^= ClusterSize.GetHashCode();
      if (PartitionsCount != 0) hash ^= PartitionsCount.GetHashCode();
      if (ReplicationFactor != 0) hash ^= ReplicationFactor.GetHashCode();
      if (GatewayVersion.Length != 0) hash ^= GatewayVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      brokers_.WriteTo(output, _repeated_brokers_codec);
      if (ClusterSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClusterSize);
      }
      if (PartitionsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PartitionsCount);
      }
      if (ReplicationFactor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ReplicationFactor);
      }
      if (GatewayVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GatewayVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      brokers_.WriteTo(ref output, _repeated_brokers_codec);
      if (ClusterSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClusterSize);
      }
      if (PartitionsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PartitionsCount);
      }
      if (ReplicationFactor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ReplicationFactor);
      }
      if (GatewayVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GatewayVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += brokers_.CalculateSize(_repeated_brokers_codec);
      if (ClusterSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClusterSize);
      }
      if (PartitionsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartitionsCount);
      }
      if (ReplicationFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplicationFactor);
      }
      if (GatewayVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GatewayVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopologyResponse other) {
      if (other == null) {
        return;
      }
      brokers_.Add(other.brokers_);
      if (other.ClusterSize != 0) {
        ClusterSize = other.ClusterSize;
      }
      if (other.PartitionsCount != 0) {
        PartitionsCount = other.PartitionsCount;
      }
      if (other.ReplicationFactor != 0) {
        ReplicationFactor = other.ReplicationFactor;
      }
      if (other.GatewayVersion.Length != 0) {
        GatewayVersion = other.GatewayVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            brokers_.AddEntriesFrom(input, _repeated_brokers_codec);
            break;
          }
          case 16: {
            ClusterSize = input.ReadInt32();
            break;
          }
          case 24: {
            PartitionsCount = input.ReadInt32();
            break;
          }
          case 32: {
            ReplicationFactor = input.ReadInt32();
            break;
          }
          case 42: {
            GatewayVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            brokers_.AddEntriesFrom(ref input, _repeated_brokers_codec);
            break;
          }
          case 16: {
            ClusterSize = input.ReadInt32();
            break;
          }
          case 24: {
            PartitionsCount = input.ReadInt32();
            break;
          }
          case 32: {
            ReplicationFactor = input.ReadInt32();
            break;
          }
          case 42: {
            GatewayVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BrokerInfo : pb::IMessage<BrokerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BrokerInfo> _parser = new pb::MessageParser<BrokerInfo>(() => new BrokerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrokerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokerInfo(BrokerInfo other) : this() {
      nodeId_ = other.nodeId_;
      host_ = other.host_;
      port_ = other.port_;
      partitions_ = other.partitions_.Clone();
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokerInfo Clone() {
      return new BrokerInfo(this);
    }

    /// <summary>Field number for the "nodeId" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private int nodeId_;
    /// <summary>
    /// unique (within a cluster) node ID for the broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = value;
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private string host_ = "";
    /// <summary>
    /// hostname of the broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    /// <summary>
    /// port for the broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GatewayProtocol.Partition> _repeated_partitions_codec
        = pb::FieldCodec.ForMessage(34, global::GatewayProtocol.Partition.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.Partition> partitions_ = new pbc::RepeatedField<global::GatewayProtocol.Partition>();
    /// <summary>
    /// list of partitions managed or replicated on this broker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.Partition> Partitions {
      get { return partitions_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    /// broker version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrokerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrokerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if(!partitions_.Equals(other.partitions_)) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId != 0) hash ^= NodeId.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      hash ^= partitions_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NodeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      partitions_.WriteTo(output, _repeated_partitions_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NodeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      partitions_.WriteTo(ref output, _repeated_partitions_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeId);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      size += partitions_.CalculateSize(_repeated_partitions_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrokerInfo other) {
      if (other == null) {
        return;
      }
      if (other.NodeId != 0) {
        NodeId = other.NodeId;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      partitions_.Add(other.partitions_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 34: {
            partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 34: {
            partitions_.AddEntriesFrom(ref input, _repeated_partitions_codec);
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Partition : pb::IMessage<Partition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Partition> _parser = new pb::MessageParser<Partition>(() => new Partition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Partition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition(Partition other) : this() {
      partitionId_ = other.partitionId_;
      role_ = other.role_;
      health_ = other.health_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition Clone() {
      return new Partition(this);
    }

    /// <summary>Field number for the "partitionId" field.</summary>
    public const int PartitionIdFieldNumber = 1;
    private int partitionId_;
    /// <summary>
    /// the unique ID of this partition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PartitionId {
      get { return partitionId_; }
      set {
        partitionId_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private global::GatewayProtocol.Partition.Types.PartitionBrokerRole role_ = global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader;
    /// <summary>
    /// the role of the broker for this partition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.Partition.Types.PartitionBrokerRole Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    private global::GatewayProtocol.Partition.Types.PartitionBrokerHealth health_ = global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy;
    /// <summary>
    /// the health of this partition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GatewayProtocol.Partition.Types.PartitionBrokerHealth Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Partition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Partition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartitionId != other.PartitionId) return false;
      if (Role != other.Role) return false;
      if (Health != other.Health) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartitionId != 0) hash ^= PartitionId.GetHashCode();
      if (Role != global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader) hash ^= Role.GetHashCode();
      if (Health != global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy) hash ^= Health.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PartitionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PartitionId);
      }
      if (Role != global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Role);
      }
      if (Health != global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PartitionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PartitionId);
      }
      if (Role != global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Role);
      }
      if (Health != global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartitionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartitionId);
      }
      if (Role != global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (Health != global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Partition other) {
      if (other == null) {
        return;
      }
      if (other.PartitionId != 0) {
        PartitionId = other.PartitionId;
      }
      if (other.Role != global::GatewayProtocol.Partition.Types.PartitionBrokerRole.Leader) {
        Role = other.Role;
      }
      if (other.Health != global::GatewayProtocol.Partition.Types.PartitionBrokerHealth.Healthy) {
        Health = other.Health;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PartitionId = input.ReadInt32();
            break;
          }
          case 16: {
            Role = (global::GatewayProtocol.Partition.Types.PartitionBrokerRole) input.ReadEnum();
            break;
          }
          case 24: {
            Health = (global::GatewayProtocol.Partition.Types.PartitionBrokerHealth) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PartitionId = input.ReadInt32();
            break;
          }
          case 16: {
            Role = (global::GatewayProtocol.Partition.Types.PartitionBrokerRole) input.ReadEnum();
            break;
          }
          case 24: {
            Health = (global::GatewayProtocol.Partition.Types.PartitionBrokerHealth) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Partition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes the Raft role of the broker for a given partition
      /// </summary>
      public enum PartitionBrokerRole {
        [pbr::OriginalName("LEADER")] Leader = 0,
        [pbr::OriginalName("FOLLOWER")] Follower = 1,
        [pbr::OriginalName("INACTIVE")] Inactive = 2,
      }

      /// <summary>
      /// Describes the current health of the partition
      /// </summary>
      public enum PartitionBrokerHealth {
        [pbr::OriginalName("HEALTHY")] Healthy = 0,
        [pbr::OriginalName("UNHEALTHY")] Unhealthy = 1,
        [pbr::OriginalName("DEAD")] Dead = 2,
      }

    }
    #endregion

  }

  public sealed partial class UpdateJobRetriesRequest : pb::IMessage<UpdateJobRetriesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateJobRetriesRequest> _parser = new pb::MessageParser<UpdateJobRetriesRequest>(() => new UpdateJobRetriesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateJobRetriesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesRequest(UpdateJobRetriesRequest other) : this() {
      jobKey_ = other.jobKey_;
      retries_ = other.retries_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesRequest Clone() {
      return new UpdateJobRetriesRequest(this);
    }

    /// <summary>Field number for the "jobKey" field.</summary>
    public const int JobKeyFieldNumber = 1;
    private long jobKey_;
    /// <summary>
    /// the unique job identifier, as obtained through ActivateJobs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JobKey {
      get { return jobKey_; }
      set {
        jobKey_ = value;
      }
    }

    /// <summary>Field number for the "retries" field.</summary>
    public const int RetriesFieldNumber = 2;
    private int retries_;
    /// <summary>
    /// the new amount of retries for the job; must be positive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Retries {
      get { return retries_; }
      set {
        retries_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateJobRetriesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateJobRetriesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobKey != other.JobKey) return false;
      if (Retries != other.Retries) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobKey != 0L) hash ^= JobKey.GetHashCode();
      if (Retries != 0) hash ^= Retries.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Retries != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retries);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(JobKey);
      }
      if (Retries != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retries);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JobKey);
      }
      if (Retries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retries);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateJobRetriesRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobKey != 0L) {
        JobKey = other.JobKey;
      }
      if (other.Retries != 0) {
        Retries = other.Retries;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 16: {
            Retries = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JobKey = input.ReadInt64();
            break;
          }
          case 16: {
            Retries = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateJobRetriesResponse : pb::IMessage<UpdateJobRetriesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateJobRetriesResponse> _parser = new pb::MessageParser<UpdateJobRetriesResponse>(() => new UpdateJobRetriesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateJobRetriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesResponse(UpdateJobRetriesResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobRetriesResponse Clone() {
      return new UpdateJobRetriesResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateJobRetriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateJobRetriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateJobRetriesResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SetVariablesRequest : pb::IMessage<SetVariablesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetVariablesRequest> _parser = new pb::MessageParser<SetVariablesRequest>(() => new SetVariablesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetVariablesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesRequest(SetVariablesRequest other) : this() {
      elementInstanceKey_ = other.elementInstanceKey_;
      variables_ = other.variables_;
      local_ = other.local_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesRequest Clone() {
      return new SetVariablesRequest(this);
    }

    /// <summary>Field number for the "elementInstanceKey" field.</summary>
    public const int ElementInstanceKeyFieldNumber = 1;
    private long elementInstanceKey_;
    /// <summary>
    /// the unique identifier of a particular element; can be the process instance key (as
    /// obtained during instance creation), or a given element, such as a service task (see
    /// elementInstanceKey on the job message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ElementInstanceKey {
      get { return elementInstanceKey_; }
      set {
        elementInstanceKey_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private string variables_ = "";
    /// <summary>
    /// a JSON serialized document describing variables as key value pairs; the root of the document
    /// must be an object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Variables {
      get { return variables_; }
      set {
        variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "local" field.</summary>
    public const int LocalFieldNumber = 3;
    private bool local_;
    /// <summary>
    /// if true, the variables will be merged strictly into the local scope (as indicated by
    /// elementInstanceKey); this means the variables is not propagated to upper scopes.
    /// for example, let's say we have two scopes, '1' and '2', with each having effective variables as:
    /// 1 => `{ "foo" : 2 }`, and 2 => `{ "bar" : 1 }`. if we send an update request with
    /// elementInstanceKey = 2, variables `{ "foo" : 5 }`, and local is true, then scope 1 will
    /// be unchanged, and scope 2 will now be `{ "bar" : 1, "foo" 5 }`. if local was false, however,
    /// then scope 1 would be `{ "foo": 5 }`, and scope 2 would be `{ "bar" : 1 }`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Local {
      get { return local_; }
      set {
        local_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetVariablesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetVariablesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ElementInstanceKey != other.ElementInstanceKey) return false;
      if (Variables != other.Variables) return false;
      if (Local != other.Local) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ElementInstanceKey != 0L) hash ^= ElementInstanceKey.GetHashCode();
      if (Variables.Length != 0) hash ^= Variables.GetHashCode();
      if (Local != false) hash ^= Local.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ElementInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ElementInstanceKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Variables);
      }
      if (Local != false) {
        output.WriteRawTag(24);
        output.WriteBool(Local);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ElementInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ElementInstanceKey);
      }
      if (Variables.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Variables);
      }
      if (Local != false) {
        output.WriteRawTag(24);
        output.WriteBool(Local);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElementInstanceKey);
      }
      if (Variables.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
      }
      if (Local != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetVariablesRequest other) {
      if (other == null) {
        return;
      }
      if (other.ElementInstanceKey != 0L) {
        ElementInstanceKey = other.ElementInstanceKey;
      }
      if (other.Variables.Length != 0) {
        Variables = other.Variables;
      }
      if (other.Local != false) {
        Local = other.Local;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ElementInstanceKey = input.ReadInt64();
            break;
          }
          case 18: {
            Variables = input.ReadString();
            break;
          }
          case 24: {
            Local = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ElementInstanceKey = input.ReadInt64();
            break;
          }
          case 18: {
            Variables = input.ReadString();
            break;
          }
          case 24: {
            Local = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetVariablesResponse : pb::IMessage<SetVariablesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetVariablesResponse> _parser = new pb::MessageParser<SetVariablesResponse>(() => new SetVariablesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetVariablesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesResponse(SetVariablesResponse other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVariablesResponse Clone() {
      return new SetVariablesResponse(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// the unique key of the set variables command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetVariablesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetVariablesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetVariablesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ModifyProcessInstanceRequest : pb::IMessage<ModifyProcessInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyProcessInstanceRequest> _parser = new pb::MessageParser<ModifyProcessInstanceRequest>(() => new ModifyProcessInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyProcessInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceRequest(ModifyProcessInstanceRequest other) : this() {
      processInstanceKey_ = other.processInstanceKey_;
      activateInstructions_ = other.activateInstructions_.Clone();
      terminateInstructions_ = other.terminateInstructions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceRequest Clone() {
      return new ModifyProcessInstanceRequest(this);
    }

    /// <summary>Field number for the "processInstanceKey" field.</summary>
    public const int ProcessInstanceKeyFieldNumber = 1;
    private long processInstanceKey_;
    /// <summary>
    /// the key of the process instance that should be modified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessInstanceKey {
      get { return processInstanceKey_; }
      set {
        processInstanceKey_ = value;
      }
    }

    /// <summary>Field number for the "activateInstructions" field.</summary>
    public const int ActivateInstructionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction> _repeated_activateInstructions_codec
        = pb::FieldCodec.ForMessage(18, global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction> activateInstructions_ = new pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction>();
    /// <summary>
    /// instructions describing which elements should be activated in which scopes,
    /// and which variables should be created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.ActivateInstruction> ActivateInstructions {
      get { return activateInstructions_; }
    }

    /// <summary>Field number for the "terminateInstructions" field.</summary>
    public const int TerminateInstructionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction> _repeated_terminateInstructions_codec
        = pb::FieldCodec.ForMessage(26, global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction.Parser);
    private readonly pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction> terminateInstructions_ = new pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction>();
    /// <summary>
    /// instructions describing which elements should be terminated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.TerminateInstruction> TerminateInstructions {
      get { return terminateInstructions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyProcessInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyProcessInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessInstanceKey != other.ProcessInstanceKey) return false;
      if(!activateInstructions_.Equals(other.activateInstructions_)) return false;
      if(!terminateInstructions_.Equals(other.terminateInstructions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessInstanceKey != 0L) hash ^= ProcessInstanceKey.GetHashCode();
      hash ^= activateInstructions_.GetHashCode();
      hash ^= terminateInstructions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessInstanceKey);
      }
      activateInstructions_.WriteTo(output, _repeated_activateInstructions_codec);
      terminateInstructions_.WriteTo(output, _repeated_terminateInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessInstanceKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessInstanceKey);
      }
      activateInstructions_.WriteTo(ref output, _repeated_activateInstructions_codec);
      terminateInstructions_.WriteTo(ref output, _repeated_terminateInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessInstanceKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessInstanceKey);
      }
      size += activateInstructions_.CalculateSize(_repeated_activateInstructions_codec);
      size += terminateInstructions_.CalculateSize(_repeated_terminateInstructions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyProcessInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessInstanceKey != 0L) {
        ProcessInstanceKey = other.ProcessInstanceKey;
      }
      activateInstructions_.Add(other.activateInstructions_);
      terminateInstructions_.Add(other.terminateInstructions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 18: {
            activateInstructions_.AddEntriesFrom(input, _repeated_activateInstructions_codec);
            break;
          }
          case 26: {
            terminateInstructions_.AddEntriesFrom(input, _repeated_terminateInstructions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessInstanceKey = input.ReadInt64();
            break;
          }
          case 18: {
            activateInstructions_.AddEntriesFrom(ref input, _repeated_activateInstructions_codec);
            break;
          }
          case 26: {
            terminateInstructions_.AddEntriesFrom(ref input, _repeated_terminateInstructions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ModifyProcessInstanceRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ActivateInstruction : pb::IMessage<ActivateInstruction>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ActivateInstruction> _parser = new pb::MessageParser<ActivateInstruction>(() => new ActivateInstruction());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ActivateInstruction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GatewayProtocol.ModifyProcessInstanceRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActivateInstruction() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActivateInstruction(ActivateInstruction other) : this() {
          elementId_ = other.elementId_;
          ancestorElementInstanceKey_ = other.ancestorElementInstanceKey_;
          variableInstructions_ = other.variableInstructions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActivateInstruction Clone() {
          return new ActivateInstruction(this);
        }

        /// <summary>Field number for the "elementId" field.</summary>
        public const int ElementIdFieldNumber = 1;
        private string elementId_ = "";
        /// <summary>
        /// the id of the element that should be activated
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ElementId {
          get { return elementId_; }
          set {
            elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ancestorElementInstanceKey" field.</summary>
        public const int AncestorElementInstanceKeyFieldNumber = 2;
        private long ancestorElementInstanceKey_;
        /// <summary>
        /// the key of the ancestor scope the element instance should be created in;
        /// set to -1 to create the new element instance within an existing element
        /// instance of the flow scope
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long AncestorElementInstanceKey {
          get { return ancestorElementInstanceKey_; }
          set {
            ancestorElementInstanceKey_ = value;
          }
        }

        /// <summary>Field number for the "variableInstructions" field.</summary>
        public const int VariableInstructionsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction> _repeated_variableInstructions_codec
            = pb::FieldCodec.ForMessage(26, global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction.Parser);
        private readonly pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction> variableInstructions_ = new pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction>();
        /// <summary>
        /// instructions describing which variables should be created
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GatewayProtocol.ModifyProcessInstanceRequest.Types.VariableInstruction> VariableInstructions {
          get { return variableInstructions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ActivateInstruction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ActivateInstruction other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ElementId != other.ElementId) return false;
          if (AncestorElementInstanceKey != other.AncestorElementInstanceKey) return false;
          if(!variableInstructions_.Equals(other.variableInstructions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
          if (AncestorElementInstanceKey != 0L) hash ^= AncestorElementInstanceKey.GetHashCode();
          hash ^= variableInstructions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ElementId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ElementId);
          }
          if (AncestorElementInstanceKey != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(AncestorElementInstanceKey);
          }
          variableInstructions_.WriteTo(output, _repeated_variableInstructions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ElementId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ElementId);
          }
          if (AncestorElementInstanceKey != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(AncestorElementInstanceKey);
          }
          variableInstructions_.WriteTo(ref output, _repeated_variableInstructions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ElementId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementId);
          }
          if (AncestorElementInstanceKey != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(AncestorElementInstanceKey);
          }
          size += variableInstructions_.CalculateSize(_repeated_variableInstructions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ActivateInstruction other) {
          if (other == null) {
            return;
          }
          if (other.ElementId.Length != 0) {
            ElementId = other.ElementId;
          }
          if (other.AncestorElementInstanceKey != 0L) {
            AncestorElementInstanceKey = other.AncestorElementInstanceKey;
          }
          variableInstructions_.Add(other.variableInstructions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ElementId = input.ReadString();
                break;
              }
              case 16: {
                AncestorElementInstanceKey = input.ReadInt64();
                break;
              }
              case 26: {
                variableInstructions_.AddEntriesFrom(input, _repeated_variableInstructions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ElementId = input.ReadString();
                break;
              }
              case 16: {
                AncestorElementInstanceKey = input.ReadInt64();
                break;
              }
              case 26: {
                variableInstructions_.AddEntriesFrom(ref input, _repeated_variableInstructions_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class VariableInstruction : pb::IMessage<VariableInstruction>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VariableInstruction> _parser = new pb::MessageParser<VariableInstruction>(() => new VariableInstruction());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VariableInstruction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GatewayProtocol.ModifyProcessInstanceRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VariableInstruction() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VariableInstruction(VariableInstruction other) : this() {
          variables_ = other.variables_;
          scopeId_ = other.scopeId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VariableInstruction Clone() {
          return new VariableInstruction(this);
        }

        /// <summary>Field number for the "variables" field.</summary>
        public const int VariablesFieldNumber = 1;
        private string variables_ = "";
        /// <summary>
        /// JSON document that will instantiate the variables for the root variable scope of the
        /// process instance; it must be a JSON object, as variables will be mapped in a
        /// key-value fashion. e.g. { "a": 1, "b": 2 } will create two variables, named "a" and
        /// "b" respectively, with their associated values. [{ "a": 1, "b": 2 }] would not be a
        /// valid argument, as the root of the JSON document is an array and not an object.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Variables {
          get { return variables_; }
          set {
            variables_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "scopeId" field.</summary>
        public const int ScopeIdFieldNumber = 2;
        private string scopeId_ = "";
        /// <summary>
        /// the id of the element in which scope the variables should be created;
        /// leave empty to create the variables in the global scope of the process instance
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ScopeId {
          get { return scopeId_; }
          set {
            scopeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VariableInstruction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VariableInstruction other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Variables != other.Variables) return false;
          if (ScopeId != other.ScopeId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Variables.Length != 0) hash ^= Variables.GetHashCode();
          if (ScopeId.Length != 0) hash ^= ScopeId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Variables.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Variables);
          }
          if (ScopeId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ScopeId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Variables.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Variables);
          }
          if (ScopeId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ScopeId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Variables.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Variables);
          }
          if (ScopeId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ScopeId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VariableInstruction other) {
          if (other == null) {
            return;
          }
          if (other.Variables.Length != 0) {
            Variables = other.Variables;
          }
          if (other.ScopeId.Length != 0) {
            ScopeId = other.ScopeId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Variables = input.ReadString();
                break;
              }
              case 18: {
                ScopeId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Variables = input.ReadString();
                break;
              }
              case 18: {
                ScopeId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TerminateInstruction : pb::IMessage<TerminateInstruction>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TerminateInstruction> _parser = new pb::MessageParser<TerminateInstruction>(() => new TerminateInstruction());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TerminateInstruction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GatewayProtocol.ModifyProcessInstanceRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TerminateInstruction() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TerminateInstruction(TerminateInstruction other) : this() {
          elementInstanceKey_ = other.elementInstanceKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TerminateInstruction Clone() {
          return new TerminateInstruction(this);
        }

        /// <summary>Field number for the "elementInstanceKey" field.</summary>
        public const int ElementInstanceKeyFieldNumber = 1;
        private long elementInstanceKey_;
        /// <summary>
        /// the id of the element that should be terminated
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ElementInstanceKey {
          get { return elementInstanceKey_; }
          set {
            elementInstanceKey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TerminateInstruction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TerminateInstruction other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ElementInstanceKey != other.ElementInstanceKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ElementInstanceKey != 0L) hash ^= ElementInstanceKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ElementInstanceKey != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ElementInstanceKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ElementInstanceKey != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ElementInstanceKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ElementInstanceKey != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElementInstanceKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TerminateInstruction other) {
          if (other == null) {
            return;
          }
          if (other.ElementInstanceKey != 0L) {
            ElementInstanceKey = other.ElementInstanceKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ElementInstanceKey = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ElementInstanceKey = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ModifyProcessInstanceResponse : pb::IMessage<ModifyProcessInstanceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyProcessInstanceResponse> _parser = new pb::MessageParser<ModifyProcessInstanceResponse>(() => new ModifyProcessInstanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyProcessInstanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayProtocol.GatewayReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceResponse(ModifyProcessInstanceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyProcessInstanceResponse Clone() {
      return new ModifyProcessInstanceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyProcessInstanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyProcessInstanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyProcessInstanceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
