@inject IProcessDefinitionService ProcessDefinitionService;
@inject IProcessInstanceService ProcessInstanceService;

@page "/process-definitions/{definitionKey:long}"
@using Operations.BackOffice.Client.Components.BPMNViewer
@using Operations.BackOffice.Client.Components.ProcessInstances
@using Operations.BackOffice.Client.Data.ProcessDefinitions;
@using Operations.BackOffice.Client.Data.ProcessInstances;

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h3" GutterBottom="true">Process Instances</MudText>
        </MudItem>
        
        <MudItem xs="12">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>BPMN Diagram</CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Style="height: 500px">
                    @if (_bpmnXml != null)
                    {
                        <BPMNViewer Xml="@_bpmnXml"></BPMNViewer>
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>Process Instances for definition <code>@DefinitionKey</code></CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                     <HistoricProcessInstancesTable ProcessDefinitionKey="@DefinitionKey" ProcessInstanceService="@ProcessInstanceService"/>
                 </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public long DefinitionKey { get; set; }

    private string _bpmnXml;

    protected override async Task OnInitializedAsync()
    {
        _bpmnXml = await ProcessDefinitionService.GetProcessDefinitionXml(DefinitionKey);
    }
}